/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Admin;

import ConnectDB.ConnectDB;
import Interfaces.Login.EmpID;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;


public class AReSetEmpPW extends javax.swing.JPanel {

    /**
     * Creates new form ReSetEmpPW
     */
    public AReSetEmpPW() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AReSetEmpPW_Label_Heading = new javax.swing.JLabel();
        AReSetEmpPW_Label_EmpID = new javax.swing.JLabel();
        AReSetEmpPW_Label_NewPaswd = new javax.swing.JLabel();
        AReSetEmpPW_Label_CPaswd = new javax.swing.JLabel();
        AReSetEmpPW_PaswdF_NewPaswd = new javax.swing.JPasswordField();
        AReSetEmpPW_PaswdF_CPaswd = new javax.swing.JPasswordField();
        AReSetEmpPW_Btn_ReSetPaswd = new javax.swing.JButton();
        AReSetEmpPW_Btn_Back = new javax.swing.JButton();
        AReSetEmpPW_Btn_Ok = new javax.swing.JButton();
        Emp_Scp_4 = new javax.swing.JScrollPane();
        AReSetEmpPW_search_Table_Emp = new javax.swing.JTable();
        AReSetEmpPW_TextF_EmpID_EmpName = new javax.swing.JTextField();
        AReSetEmpPW_search_Label_EmpID_EmpName = new javax.swing.JLabel();
        AReSetEmpPW_TextF_EmpID = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        AReSetEmpPW_Label_Heading.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        AReSetEmpPW_Label_Heading.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_Label_Heading.setText("Re-Set Employee Password");

        AReSetEmpPW_Label_EmpID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AReSetEmpPW_Label_EmpID.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_Label_EmpID.setText("Employee ID : ");

        AReSetEmpPW_Label_NewPaswd.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AReSetEmpPW_Label_NewPaswd.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_Label_NewPaswd.setText("New Password : ");

        AReSetEmpPW_Label_CPaswd.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AReSetEmpPW_Label_CPaswd.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_Label_CPaswd.setText("Comfirm Password : ");

        AReSetEmpPW_PaswdF_NewPaswd.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AReSetEmpPW_PaswdF_NewPaswd.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_PaswdF_NewPaswd.setToolTipText("New Password");

        AReSetEmpPW_PaswdF_CPaswd.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AReSetEmpPW_PaswdF_CPaswd.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_PaswdF_CPaswd.setToolTipText("Confirm Password");

        AReSetEmpPW_Btn_ReSetPaswd.setBackground(new java.awt.Color(204, 204, 204));
        AReSetEmpPW_Btn_ReSetPaswd.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        AReSetEmpPW_Btn_ReSetPaswd.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_Btn_ReSetPaswd.setText("Re-Set Password");
        AReSetEmpPW_Btn_ReSetPaswd.setToolTipText("Re-Set Password");
        AReSetEmpPW_Btn_ReSetPaswd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AReSetEmpPW_Btn_ReSetPaswd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AReSetEmpPW_Btn_ReSetPaswdActionPerformed(evt);
            }
        });

        AReSetEmpPW_Btn_Back.setBackground(new java.awt.Color(204, 204, 204));
        AReSetEmpPW_Btn_Back.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        AReSetEmpPW_Btn_Back.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_Btn_Back.setText("Back");
        AReSetEmpPW_Btn_Back.setToolTipText("Back");
        AReSetEmpPW_Btn_Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AReSetEmpPW_Btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AReSetEmpPW_Btn_BackActionPerformed(evt);
            }
        });

        AReSetEmpPW_Btn_Ok.setBackground(new java.awt.Color(204, 204, 204));
        AReSetEmpPW_Btn_Ok.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        AReSetEmpPW_Btn_Ok.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_Btn_Ok.setText("Ok");
        AReSetEmpPW_Btn_Ok.setToolTipText("Ok");
        AReSetEmpPW_Btn_Ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AReSetEmpPW_Btn_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AReSetEmpPW_Btn_OkActionPerformed(evt);
            }
        });

        AReSetEmpPW_search_Table_Emp.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AReSetEmpPW_search_Table_Emp.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_search_Table_Emp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AReSetEmpPW_search_Table_Emp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AReSetEmpPW_search_Table_Emp.setGridColor(new java.awt.Color(102, 102, 102));
        AReSetEmpPW_search_Table_Emp.setIntercellSpacing(new java.awt.Dimension(1, 0));
        AReSetEmpPW_search_Table_Emp.setRowHeight(17);
        AReSetEmpPW_search_Table_Emp.setSelectionBackground(new java.awt.Color(46, 141, 216));
        AReSetEmpPW_search_Table_Emp.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        AReSetEmpPW_search_Table_Emp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AReSetEmpPW_search_Table_EmpMouseClicked(evt);
            }
        });
        Emp_Scp_4.setViewportView(AReSetEmpPW_search_Table_Emp);

        AReSetEmpPW_TextF_EmpID_EmpName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AReSetEmpPW_TextF_EmpID_EmpName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AReSetEmpPW_TextF_EmpID_EmpNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AReSetEmpPW_TextF_EmpID_EmpNameKeyTyped(evt);
            }
        });

        AReSetEmpPW_search_Label_EmpID_EmpName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AReSetEmpPW_search_Label_EmpID_EmpName.setForeground(new java.awt.Color(51, 51, 51));
        AReSetEmpPW_search_Label_EmpID_EmpName.setText("Employee ID / Name : ");

        AReSetEmpPW_TextF_EmpID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AReSetEmpPW_TextF_EmpID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AReSetEmpPW_TextF_EmpIDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AReSetEmpPW_Btn_Back)
                        .addGap(6, 6, 6)
                        .addComponent(AReSetEmpPW_Btn_Ok))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(377, 377, 377)
                        .addComponent(AReSetEmpPW_Label_Heading)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AReSetEmpPW_Btn_ReSetPaswd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AReSetEmpPW_Label_NewPaswd)
                            .addComponent(AReSetEmpPW_Label_EmpID)
                            .addComponent(AReSetEmpPW_Label_CPaswd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AReSetEmpPW_PaswdF_NewPaswd)
                            .addComponent(AReSetEmpPW_PaswdF_CPaswd)
                            .addComponent(AReSetEmpPW_TextF_EmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 207, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AReSetEmpPW_search_Label_EmpID_EmpName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AReSetEmpPW_TextF_EmpID_EmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Emp_Scp_4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(AReSetEmpPW_Label_Heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AReSetEmpPW_search_Label_EmpID_EmpName)
                            .addComponent(AReSetEmpPW_TextF_EmpID_EmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Emp_Scp_4, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AReSetEmpPW_Label_EmpID)
                            .addComponent(AReSetEmpPW_TextF_EmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AReSetEmpPW_Label_NewPaswd)
                            .addComponent(AReSetEmpPW_PaswdF_NewPaswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AReSetEmpPW_Label_CPaswd)
                            .addComponent(AReSetEmpPW_PaswdF_CPaswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AReSetEmpPW_Btn_ReSetPaswd, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AReSetEmpPW_Btn_Back)
                    .addComponent(AReSetEmpPW_Btn_Ok))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AReSetEmpPW_Btn_ReSetPaswdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AReSetEmpPW_Btn_ReSetPaswdActionPerformed
        try {
            if (AReSetEmpPW_TextF_EmpID.getText().equals("") || AReSetEmpPW_TextF_EmpID.getText() == null) {
                JOptionPane.showMessageDialog(this, "Plese fill the employee ID", "Error", 0);
            } else if (AReSetEmpPW_PaswdF_NewPaswd.getText().equals("") || AReSetEmpPW_PaswdF_NewPaswd.getText() == null) {
                JOptionPane.showMessageDialog(this, "Plese fill the new password", "Error", 0);
            } else if (AReSetEmpPW_PaswdF_CPaswd.getText().equals("") || AReSetEmpPW_PaswdF_CPaswd.getText() == null) {
                JOptionPane.showMessageDialog(this, "Plese fill the confirm password", "Error", 0);
            } else if (!AReSetEmpPW_PaswdF_NewPaswd.getText().equals(AReSetEmpPW_PaswdF_CPaswd.getText())) {
                JOptionPane.showMessageDialog(this, "The confirm password doesn't match with the password", "Error", 0);
            } else if (AReSetEmpPW_PaswdF_NewPaswd.getText().equals(AReSetEmpPW_PaswdF_CPaswd.getText())) {
                ResultSet resEid = ConnectDB.DBConnection().createStatement().executeQuery("SELECT Emp_ID FROM employee WHERE Emp_ID='" + AReSetEmpPW_TextF_EmpID.getText() + "' AND Emp_Staus='" + 1 + "'");
                if (resEid.next()) {
                    int c = JOptionPane.showConfirmDialog(this, "Do you want to reset this employee's password", "Confirm Reset", 0);
                    if (c == 0) {
                        int x = 0;
                        do {
                            JPasswordField adminPwd = new JPasswordField();
                            int in = JOptionPane.showConfirmDialog(this, adminPwd, "Enter your Admin Password", 2);
                            if (in == 0) {
                                ResultSet resEmpPw = ConnectDB.DBConnection().createStatement().executeQuery("SELECT EmpPassword FROM emppassword WHERE Emp_ID='" + new EmpID().GetEID() + "' AND EmpPassword='" + adminPwd.getText() + "'");
                                if (resEmpPw.next()) {
                                    ConnectDB.DBConnection().createStatement().executeUpdate("UPDATE emppassword SET EmpPassword='" + AReSetEmpPW_PaswdF_NewPaswd.getText() + "' WHERE Emp_ID='" + AReSetEmpPW_TextF_EmpID.getText() + "'");
                                    JOptionPane.showMessageDialog(this, "Password reset successfull");
                                    AReSetEmpPW_TextF_EmpID.setText("");
                                    AReSetEmpPW_PaswdF_NewPaswd.setText("");
                                    AReSetEmpPW_PaswdF_CPaswd.setText("");
                                    x=1;
                                } else {
                                    JOptionPane.showMessageDialog(this, "Your Admin Password is incorrect", "Error", 0);
                                }
                            } else if (in == 2 || in == -1) {
                                x = 1;
                            }
                        } while (x == 0);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Plese enter a valid ID", "Error", 0);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_AReSetEmpPW_Btn_ReSetPaswdActionPerformed

    private void AReSetEmpPW_Btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AReSetEmpPW_Btn_BackActionPerformed
        // TODSup_Label_Headingcode here:
    }//GEN-LAST:event_AReSetEmpPW_Btn_BackActionPerformed

    private void AReSetEmpPW_Btn_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AReSetEmpPW_Btn_OkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AReSetEmpPW_Btn_OkActionPerformed

    private void AReSetEmpPW_search_Table_EmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AReSetEmpPW_search_Table_EmpMouseClicked
        AReSetEmpPW_search_Table_Emp.setRowSelectionAllowed(true);
        try {
            ResultSet resE = ConnectDB.DBConnection().createStatement().executeQuery("SELECT Emp_ID FROM employee WHERE Emp_ID='" + (String) AReSetEmpPW_search_Table_Emp.getValueAt(AReSetEmpPW_search_Table_Emp.getSelectedRow(), 0) + "'");
            while (resE.next()) {
                AReSetEmpPW_TextF_EmpID.setText(resE.getString("Emp_ID"));
            }
            AReSetEmpPW_TextF_EmpID_EmpName.setText("");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_AReSetEmpPW_search_Table_EmpMouseClicked

    private void AReSetEmpPW_TextF_EmpID_EmpNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AReSetEmpPW_TextF_EmpID_EmpNameKeyReleased
        DefaultTableModel List_Emp = (DefaultTableModel) AReSetEmpPW_search_Table_Emp.getModel();
        try {
            if (!(AReSetEmpPW_TextF_EmpID_EmpName.getText().equals("")) || AReSetEmpPW_TextF_EmpID_EmpName.getText() == null) {
                List_Emp.setRowCount(0);
                if (Character.isDigit(c)) {
                    ResultSet resEid = ConnectDB.DBConnection().createStatement().executeQuery("SELECT Emp_ID, Emp_FName, Emp_LName FROM employee WHERE Emp_ID LIKE'" + AReSetEmpPW_TextF_EmpID_EmpName.getText() + "%' AND Emp_Staus='" + 1 + "'");
                    while (resEid.next()) {
                        Vector v = new Vector();
                        v.addElement(resEid.getString("Emp_ID"));
                        v.addElement(resEid.getString("Emp_FName") + " " + resEid.getString("Emp_LName"));
                        List_Emp.addRow(v);
                    }
                }
                if (Character.isLetter(c)) {
                    ResultSet resEname = ConnectDB.DBConnection().createStatement().executeQuery("SELECT Emp_ID, Emp_FName, Emp_LName FROM employee WHERE (Emp_FName LIKE'" + AReSetEmpPW_TextF_EmpID_EmpName.getText() + "%' OR Emp_LName LIKE'" + AReSetEmpPW_TextF_EmpID_EmpName.getText() + "%') AND Emp_Staus='" + 1 + "'");
                    while (resEname.next()) {
                        Vector v = new Vector();
                        v.addElement(resEname.getString("Emp_ID"));
                        v.addElement(resEname.getString("Emp_FName") + " " + resEname.getString("Emp_LName"));
                        List_Emp.addRow(v);
                    }
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_AReSetEmpPW_TextF_EmpID_EmpNameKeyReleased
    char c;
    private void AReSetEmpPW_TextF_EmpID_EmpNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AReSetEmpPW_TextF_EmpID_EmpNameKeyTyped
        if (AReSetEmpPW_TextF_EmpID_EmpName.getText().length() == 0) {
            c = evt.getKeyChar();
        }
        if (Character.isDigit(c)) {
            if (!Character.isDigit(evt.getKeyChar())) {
                evt.consume();
            }
        } else if (Character.isLetter(c)) {
            if (!Character.isLetter(evt.getKeyChar())) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_AReSetEmpPW_TextF_EmpID_EmpNameKeyTyped

    private void AReSetEmpPW_TextF_EmpIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AReSetEmpPW_TextF_EmpIDKeyTyped
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_AReSetEmpPW_TextF_EmpIDKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AReSetEmpPW_Btn_Back;
    private javax.swing.JButton AReSetEmpPW_Btn_Ok;
    private javax.swing.JButton AReSetEmpPW_Btn_ReSetPaswd;
    private javax.swing.JLabel AReSetEmpPW_Label_CPaswd;
    private javax.swing.JLabel AReSetEmpPW_Label_EmpID;
    private javax.swing.JLabel AReSetEmpPW_Label_Heading;
    private javax.swing.JLabel AReSetEmpPW_Label_NewPaswd;
    private javax.swing.JPasswordField AReSetEmpPW_PaswdF_CPaswd;
    private javax.swing.JPasswordField AReSetEmpPW_PaswdF_NewPaswd;
    private javax.swing.JTextField AReSetEmpPW_TextF_EmpID;
    private javax.swing.JTextField AReSetEmpPW_TextF_EmpID_EmpName;
    private javax.swing.JLabel AReSetEmpPW_search_Label_EmpID_EmpName;
    private javax.swing.JTable AReSetEmpPW_search_Table_Emp;
    private javax.swing.JScrollPane Emp_Scp_4;
    // End of variables declaration//GEN-END:variables
}
