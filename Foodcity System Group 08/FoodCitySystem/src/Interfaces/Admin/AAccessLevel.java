/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Admin;

import ConnectDB.ConnectDB;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class AAccessLevel extends javax.swing.JPanel {

    /**
     * Creates new form ABillType
     */
    public AAccessLevel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AAccLevel_Label_Heading = new javax.swing.JLabel();
        AAccLeve_LPane_SearchAccLevel = new javax.swing.JLayeredPane();
        AAccLevel_Search_Btn_ShowAllAccLevels = new javax.swing.JButton();
        AAccLevel_Search_Label_AccLevelName = new javax.swing.JLabel();
        AAccLevel_Search_Label_AccLevelID = new javax.swing.JLabel();
        Emp_Scp_1 = new javax.swing.JScrollPane();
        AAccLevel_Search_Table_AccLevel = new javax.swing.JTable();
        AAccLevel_Search_TextF_AccLevelID = new javax.swing.JTextField();
        AAccLevel_Search_TextF_AccLevelName = new javax.swing.JTextField();
        AAccLevel_LPane_AdEdReAccLevel = new javax.swing.JLayeredPane();
        AAccLevel_AdEdRe_Label_AccLevelName = new javax.swing.JLabel();
        AAccLevel_AdEdRe_Label_AccLevelID = new javax.swing.JLabel();
        Emp_Scp_2 = new javax.swing.JScrollPane();
        AAccLevel_AdEdRe_Table_AccLevel = new javax.swing.JTable();
        AAccLevel_AdEdRe_Btn_AddAccLevel = new javax.swing.JButton();
        AAccLevel_AdEdRe_Btn_EditAccLevel = new javax.swing.JButton();
        AAccLevel_AdEdRe_Btn_RemoveAccLevel = new javax.swing.JButton();
        AAccLevel_AdEdRe_Label_Discription = new javax.swing.JLabel();
        AddCustStage_Scp_1 = new javax.swing.JScrollPane();
        AAccLevel_AdEdRe_TextA_Discription = new javax.swing.JTextArea();
        AAccLevel_AdEdRe_Btn_RemoveAdded = new javax.swing.JButton();
        AAccLevel_AdEdRe_Btn_AddAll = new javax.swing.JButton();
        AAccLevel_AdEdRe_TextF_AccLevelID = new javax.swing.JTextField();
        AAccLevel_AdEdRe_TextF_AccLevelName = new javax.swing.JTextField();
        AAccLevel_Btn_Back = new javax.swing.JButton();
        AAccLevel_Btn_Ok = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        AAccLevel_Label_Heading.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        AAccLevel_Label_Heading.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_Label_Heading.setText("Access Level");

        AAccLeve_LPane_SearchAccLevel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Search Access Levels", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 11), new java.awt.Color(104, 2, 5))); // NOI18N
        AAccLeve_LPane_SearchAccLevel.setPreferredSize(new java.awt.Dimension(1052, 216));
        AAccLeve_LPane_SearchAccLevel.setVerifyInputWhenFocusTarget(false);

        AAccLevel_Search_Btn_ShowAllAccLevels.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_Search_Btn_ShowAllAccLevels.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        AAccLevel_Search_Btn_ShowAllAccLevels.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_Search_Btn_ShowAllAccLevels.setText("Show All Access Levels");
        AAccLevel_Search_Btn_ShowAllAccLevels.setToolTipText("Show All Access Levels");
        AAccLevel_Search_Btn_ShowAllAccLevels.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_Search_Btn_ShowAllAccLevels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_Search_Btn_ShowAllAccLevelsActionPerformed(evt);
            }
        });

        AAccLevel_Search_Label_AccLevelName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_Search_Label_AccLevelName.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_Search_Label_AccLevelName.setText("Access Level Name : ");

        AAccLevel_Search_Label_AccLevelID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_Search_Label_AccLevelID.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_Search_Label_AccLevelID.setText("Access Level ID : ");

        AAccLevel_Search_Table_AccLevel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AAccLevel_Search_Table_AccLevel.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_Search_Table_AccLevel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Access Level ID", "Access Level Name", "Discription"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AAccLevel_Search_Table_AccLevel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_Search_Table_AccLevel.setGridColor(new java.awt.Color(102, 102, 102));
        AAccLevel_Search_Table_AccLevel.setIntercellSpacing(new java.awt.Dimension(1, 0));
        AAccLevel_Search_Table_AccLevel.setRowHeight(17);
        AAccLevel_Search_Table_AccLevel.setSelectionBackground(new java.awt.Color(46, 141, 216));
        AAccLevel_Search_Table_AccLevel.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        AAccLevel_Search_Table_AccLevel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AAccLevel_Search_Table_AccLevelMouseClicked(evt);
            }
        });
        Emp_Scp_1.setViewportView(AAccLevel_Search_Table_AccLevel);

        AAccLevel_Search_TextF_AccLevelID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AAccLevel_Search_TextF_AccLevelID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AAccLevel_Search_TextF_AccLevelIDKeyReleased(evt);
            }
        });

        AAccLevel_Search_TextF_AccLevelName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AAccLevel_Search_TextF_AccLevelName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AAccLevel_Search_TextF_AccLevelNameKeyReleased(evt);
            }
        });

        AAccLeve_LPane_SearchAccLevel.setLayer(AAccLevel_Search_Btn_ShowAllAccLevels, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLeve_LPane_SearchAccLevel.setLayer(AAccLevel_Search_Label_AccLevelName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLeve_LPane_SearchAccLevel.setLayer(AAccLevel_Search_Label_AccLevelID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLeve_LPane_SearchAccLevel.setLayer(Emp_Scp_1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLeve_LPane_SearchAccLevel.setLayer(AAccLevel_Search_TextF_AccLevelID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLeve_LPane_SearchAccLevel.setLayer(AAccLevel_Search_TextF_AccLevelName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout AAccLeve_LPane_SearchAccLevelLayout = new javax.swing.GroupLayout(AAccLeve_LPane_SearchAccLevel);
        AAccLeve_LPane_SearchAccLevel.setLayout(AAccLeve_LPane_SearchAccLevelLayout);
        AAccLeve_LPane_SearchAccLevelLayout.setHorizontalGroup(
            AAccLeve_LPane_SearchAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AAccLeve_LPane_SearchAccLevelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AAccLeve_LPane_SearchAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Emp_Scp_1, javax.swing.GroupLayout.DEFAULT_SIZE, 1032, Short.MAX_VALUE)
                    .addGroup(AAccLeve_LPane_SearchAccLevelLayout.createSequentialGroup()
                        .addComponent(AAccLevel_Search_Label_AccLevelID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AAccLevel_Search_TextF_AccLevelID, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AAccLevel_Search_Label_AccLevelName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AAccLevel_Search_TextF_AccLevelName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(AAccLevel_Search_Btn_ShowAllAccLevels)))
                .addContainerGap())
        );
        AAccLeve_LPane_SearchAccLevelLayout.setVerticalGroup(
            AAccLeve_LPane_SearchAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AAccLeve_LPane_SearchAccLevelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(AAccLeve_LPane_SearchAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AAccLevel_Search_Btn_ShowAllAccLevels, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AAccLevel_Search_Label_AccLevelID)
                    .addComponent(AAccLevel_Search_Label_AccLevelName)
                    .addComponent(AAccLevel_Search_TextF_AccLevelID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AAccLevel_Search_TextF_AccLevelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Emp_Scp_1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );

        AAccLevel_LPane_AdEdReAccLevel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Add / Edit / Remove Access Levels", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 11), new java.awt.Color(104, 2, 5))); // NOI18N
        AAccLevel_LPane_AdEdReAccLevel.setPreferredSize(new java.awt.Dimension(1052, 216));
        AAccLevel_LPane_AdEdReAccLevel.setVerifyInputWhenFocusTarget(false);

        AAccLevel_AdEdRe_Label_AccLevelName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Label_AccLevelName.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Label_AccLevelName.setText("Access Level Name : ");

        AAccLevel_AdEdRe_Label_AccLevelID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Label_AccLevelID.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Label_AccLevelID.setText("Access Level ID : ");

        AAccLevel_AdEdRe_Table_AccLevel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AAccLevel_AdEdRe_Table_AccLevel.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Table_AccLevel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Access Level ID", "Access Level Name", "Discription"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AAccLevel_AdEdRe_Table_AccLevel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_AdEdRe_Table_AccLevel.setGridColor(new java.awt.Color(102, 102, 102));
        AAccLevel_AdEdRe_Table_AccLevel.setIntercellSpacing(new java.awt.Dimension(1, 0));
        AAccLevel_AdEdRe_Table_AccLevel.setRowHeight(17);
        AAccLevel_AdEdRe_Table_AccLevel.setSelectionBackground(new java.awt.Color(46, 141, 216));
        AAccLevel_AdEdRe_Table_AccLevel.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Emp_Scp_2.setViewportView(AAccLevel_AdEdRe_Table_AccLevel);

        AAccLevel_AdEdRe_Btn_AddAccLevel.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_AdEdRe_Btn_AddAccLevel.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Btn_AddAccLevel.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Btn_AddAccLevel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/Add_plus.png"))); // NOI18N
        AAccLevel_AdEdRe_Btn_AddAccLevel.setText("Add");
        AAccLevel_AdEdRe_Btn_AddAccLevel.setToolTipText("Add Access Level");
        AAccLevel_AdEdRe_Btn_AddAccLevel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_AdEdRe_Btn_AddAccLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_AdEdRe_Btn_AddAccLevelActionPerformed(evt);
            }
        });

        AAccLevel_AdEdRe_Btn_EditAccLevel.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_AdEdRe_Btn_EditAccLevel.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Btn_EditAccLevel.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Btn_EditAccLevel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/Edit_pencil.png"))); // NOI18N
        AAccLevel_AdEdRe_Btn_EditAccLevel.setText("Edit");
        AAccLevel_AdEdRe_Btn_EditAccLevel.setToolTipText("Edit Access Level");
        AAccLevel_AdEdRe_Btn_EditAccLevel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
        AAccLevel_AdEdRe_Btn_EditAccLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_AdEdRe_Btn_EditAccLevelActionPerformed(evt);
            }
        });

        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/trash_bin.png"))); // NOI18N
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setText("Remove");
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setToolTipText("Remove Access Level");
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_AdEdRe_Btn_RemoveAccLevelActionPerformed(evt);
            }
        });

        AAccLevel_AdEdRe_Label_Discription.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Label_Discription.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Label_Discription.setText("Discription : ");

        AddCustStage_Scp_1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        AddCustStage_Scp_1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        AAccLevel_AdEdRe_TextA_Discription.setColumns(20);
        AAccLevel_AdEdRe_TextA_Discription.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        AAccLevel_AdEdRe_TextA_Discription.setLineWrap(true);
        AAccLevel_AdEdRe_TextA_Discription.setRows(5);
        AAccLevel_AdEdRe_TextA_Discription.setToolTipText("Discription");
        AAccLevel_AdEdRe_TextA_Discription.setWrapStyleWord(true);
        AddCustStage_Scp_1.setViewportView(AAccLevel_AdEdRe_TextA_Discription);

        AAccLevel_AdEdRe_Btn_RemoveAdded.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_AdEdRe_Btn_RemoveAdded.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Btn_RemoveAdded.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Btn_RemoveAdded.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/trash_bin.png"))); // NOI18N
        AAccLevel_AdEdRe_Btn_RemoveAdded.setText("Remove");
        AAccLevel_AdEdRe_Btn_RemoveAdded.setToolTipText("Remove Added");
        AAccLevel_AdEdRe_Btn_RemoveAdded.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_AdEdRe_Btn_RemoveAdded.setEnabled(false);
        AAccLevel_AdEdRe_Btn_RemoveAdded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_AdEdRe_Btn_RemoveAddedActionPerformed(evt);
            }
        });

        AAccLevel_AdEdRe_Btn_AddAll.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_AdEdRe_Btn_AddAll.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        AAccLevel_AdEdRe_Btn_AddAll.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_AdEdRe_Btn_AddAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/check.png"))); // NOI18N
        AAccLevel_AdEdRe_Btn_AddAll.setText("Add All");
        AAccLevel_AdEdRe_Btn_AddAll.setToolTipText("Add All");
        AAccLevel_AdEdRe_Btn_AddAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_AdEdRe_Btn_AddAll.setEnabled(false);
        AAccLevel_AdEdRe_Btn_AddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_AdEdRe_Btn_AddAllActionPerformed(evt);
            }
        });

        AAccLevel_AdEdRe_TextF_AccLevelID.setEditable(false);
        AAccLevel_AdEdRe_TextF_AccLevelID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        AAccLevel_AdEdRe_TextF_AccLevelName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Label_AccLevelName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Label_AccLevelID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(Emp_Scp_2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Btn_AddAccLevel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Btn_EditAccLevel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Btn_RemoveAccLevel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Label_Discription, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AddCustStage_Scp_1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Btn_RemoveAdded, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_Btn_AddAll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_TextF_AccLevelID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        AAccLevel_LPane_AdEdReAccLevel.setLayer(AAccLevel_AdEdRe_TextF_AccLevelName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout AAccLevel_LPane_AdEdReAccLevelLayout = new javax.swing.GroupLayout(AAccLevel_LPane_AdEdReAccLevel);
        AAccLevel_LPane_AdEdReAccLevel.setLayout(AAccLevel_LPane_AdEdReAccLevelLayout);
        AAccLevel_LPane_AdEdReAccLevelLayout.setHorizontalGroup(
            AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AAccLevel_AdEdRe_Label_AccLevelID)
                    .addComponent(AAccLevel_AdEdRe_Label_AccLevelName)
                    .addComponent(AAccLevel_AdEdRe_Label_Discription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(AddCustStage_Scp_1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                        .addComponent(AAccLevel_AdEdRe_TextF_AccLevelID))
                    .addComponent(AAccLevel_AdEdRe_TextF_AccLevelName, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AAccLevel_AdEdRe_Btn_AddAccLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AAccLevel_AdEdRe_Btn_EditAccLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AAccLevel_AdEdRe_Btn_RemoveAccLevel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Emp_Scp_2, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AAccLevel_AdEdRe_Btn_RemoveAdded, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AAccLevel_AdEdRe_Btn_AddAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        AAccLevel_LPane_AdEdReAccLevelLayout.setVerticalGroup(
            AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createSequentialGroup()
                .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AAccLevel_AdEdRe_Label_AccLevelID)
                            .addComponent(AAccLevel_AdEdRe_TextF_AccLevelID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AAccLevel_AdEdRe_Label_AccLevelName)
                            .addComponent(AAccLevel_AdEdRe_TextF_AccLevelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createSequentialGroup()
                                .addComponent(AAccLevel_AdEdRe_Label_Discription)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(AddCustStage_Scp_1)))
                    .addComponent(Emp_Scp_2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createSequentialGroup()
                        .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(AAccLevel_AdEdRe_Btn_RemoveAdded)
                                .addGap(73, 73, 73)
                                .addComponent(AAccLevel_AdEdRe_Btn_AddAll, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AAccLevel_LPane_AdEdReAccLevelLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(AAccLevel_AdEdRe_Btn_AddAccLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(AAccLevel_AdEdRe_Btn_EditAccLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(AAccLevel_AdEdRe_Btn_RemoveAccLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
        );

        AAccLevel_Btn_Back.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_Btn_Back.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        AAccLevel_Btn_Back.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_Btn_Back.setText("Back");
        AAccLevel_Btn_Back.setToolTipText("Back");
        AAccLevel_Btn_Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_Btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_Btn_BackActionPerformed(evt);
            }
        });

        AAccLevel_Btn_Ok.setBackground(new java.awt.Color(204, 204, 204));
        AAccLevel_Btn_Ok.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        AAccLevel_Btn_Ok.setForeground(new java.awt.Color(51, 51, 51));
        AAccLevel_Btn_Ok.setText("Ok");
        AAccLevel_Btn_Ok.setToolTipText("Ok");
        AAccLevel_Btn_Ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AAccLevel_Btn_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAccLevel_Btn_OkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AAccLeve_LPane_SearchAccLevel, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(AAccLevel_Btn_Back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AAccLevel_Btn_Ok))
                    .addComponent(AAccLevel_LPane_AdEdReAccLevel, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(466, 466, 466)
                .addComponent(AAccLevel_Label_Heading)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AAccLevel_Label_Heading)
                .addGap(6, 6, 6)
                .addComponent(AAccLeve_LPane_SearchAccLevel, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AAccLevel_LPane_AdEdReAccLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AAccLevel_Btn_Back)
                    .addComponent(AAccLevel_Btn_Ok))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AAccLevel_Search_Btn_ShowAllAccLevelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_Search_Btn_ShowAllAccLevelsActionPerformed
        Clear();
        AAccLevel_Search_TextF_AccLevelID.setText("");
        AAccLevel_Search_TextF_AccLevelName.setText("");
        try {
            DefaultTableModel List_AdvType = (DefaultTableModel) AAccLevel_Search_Table_AccLevel.getModel();
            List_AdvType.setRowCount(0);
            ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM emp_accesslevel_detail");
            while (res.next()) {
                byte status = Byte.parseByte(res.getString("Emp_AccL_Statues"));
                if (status == 1) {
                    Vector v = new Vector();
                    v.addElement(res.getString("Emp_AccL_ID"));
                    v.addElement(res.getString("Emp_AccL_Name"));
                    v.addElement(res.getString("Emp_AccL_Discription"));
                    List_AdvType.addRow(v);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
    }//GEN-LAST:event_AAccLevel_Search_Btn_ShowAllAccLevelsActionPerformed

    private int a = 0;
    private int b = 0;
    private int clear = 0;
    private int ID = 1;
    private void AAccLevel_AdEdRe_Btn_AddAccLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_AdEdRe_Btn_AddAccLevelActionPerformed
        AAccLevel_Search_Table_AccLevel.setRowSelectionAllowed(false);
        try {
            DefaultTableModel AdEdReTblModel = (DefaultTableModel) AAccLevel_AdEdRe_Table_AccLevel.getModel();
            ResultSet res_1 = ConnectDB.DBConnection().createStatement().executeQuery("SELECT Emp_AccL_ID FROM emp_accesslevel_detail");
            if (!res_1.next()) {// if no records in table
                if (b == 0) {// first record
                    AAccLevel_AdEdRe_TextF_AccLevelID.setText("" + ID);
                    b = 1;
                } else if (b == 1) {//next records
                    if (!((AAccLevel_AdEdRe_TextF_AccLevelName.getText().equals("")) || (AAccLevel_AdEdRe_TextF_AccLevelName.getText() == null))) {//check that bill type name field empty
                        Vector v = new Vector();// Add to AdEdRe Table
                        v.addElement(AAccLevel_AdEdRe_TextF_AccLevelID.getText());
                        v.addElement(AAccLevel_AdEdRe_TextF_AccLevelName.getText());
                        v.addElement(AAccLevel_AdEdRe_TextA_Discription.getText());
                        AdEdReTblModel.addRow(v);
                        ID++;// ID increment
                        Clear();
                        AAccLevel_AdEdRe_TextF_AccLevelID.setText("" + ID);
                    } else {//if bill type name field empty
                        JOptionPane.showMessageDialog(this, "Access level name field is empty", "Error", 0);
                    }
                }
            } else {//if table filled with data
                if (a == 0) {// check text fields not empty // for the first set of data to table
                    if (clear == 0) { //// clear text fields data from search table
                        Clear();
                        clear = 1;
                    }
                    if (AdEdReTblModel.getRowCount() == 0) {
                        res_1.last();// get last ID no
                        ID = Integer.parseInt(res_1.getString("Emp_AccL_ID"));
                        ID++;// ID increment
                        //System.out.println(ID);
                        AAccLevel_AdEdRe_TextF_AccLevelID.setText("" + ID);
                    } else {
                        ID = Integer.parseInt((String) AdEdReTblModel.getValueAt(AdEdReTblModel.getRowCount() - 1, 0));// get ID last ID no in AdEdRe Table
                        ID++;//ID increment
                        AAccLevel_AdEdRe_TextF_AccLevelID.setText("" + ID);
                    }
                    a = 1;
                } else if (a == 1) {// if first data set added to db
                    if (!((AAccLevel_AdEdRe_TextF_AccLevelName.getText().equals("")) || (AAccLevel_AdEdRe_TextF_AccLevelName.getText() == null))) {
                        Vector v = new Vector();
                        v.addElement(AAccLevel_AdEdRe_TextF_AccLevelID.getText());
                        v.addElement(AAccLevel_AdEdRe_TextF_AccLevelName.getText());
                        v.addElement(AAccLevel_AdEdRe_TextA_Discription.getText());
                        AdEdReTblModel.addRow(v);
                        ID++;
                        Clear();
                        AAccLevel_AdEdRe_TextF_AccLevelID.setText("" + ID);
                    } else {
                        JOptionPane.showMessageDialog(this, "Access level name field is empty", "Error", 0);
                    }
                }
            }
            clear = 2;
            ////////////////////////////////////////////////////////////////////////////////////////////////////////
            if (AdEdReTblModel.getRowCount() > 0) {
                AAccLevel_AdEdRe_Btn_RemoveAdded.setEnabled(true);
                AAccLevel_AdEdRe_Btn_AddAll.setEnabled(true);
            }
            AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
            AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_AAccLevel_AdEdRe_Btn_AddAccLevelActionPerformed

    private void AAccLevel_AdEdRe_Btn_EditAccLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_AdEdRe_Btn_EditAccLevelActionPerformed
        if (!((AAccLevel_AdEdRe_TextF_AccLevelID.getText().equals("")) || (AAccLevel_AdEdRe_TextF_AccLevelID.getText() == null))) {
            if (!((AAccLevel_AdEdRe_TextF_AccLevelName.getText().equals("")) || (AAccLevel_AdEdRe_TextF_AccLevelName.getText() == null))) {
                int u = JOptionPane.showConfirmDialog(this, "Do you want to update this Record ?", "Are You Sure ?", 0, 3);
                if (u == 0) {
                    Update_Query();
                    AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
                    AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
                    Refresh();
                }
                AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
                AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
                AAccLevel_Search_Table_AccLevel.setRowSelectionAllowed(false);
                Clear();
            } else {
                JOptionPane.showMessageDialog(this, "Access level name field is empty", "Error", 0);
            }
        }
    }//GEN-LAST:event_AAccLevel_AdEdRe_Btn_EditAccLevelActionPerformed

    private void AAccLevel_AdEdRe_Btn_RemoveAccLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_AdEdRe_Btn_RemoveAccLevelActionPerformed
        if (!((AAccLevel_AdEdRe_TextF_AccLevelID.getText().equals("")) || (AAccLevel_AdEdRe_TextF_AccLevelID.getText() == null))) {
            int d = JOptionPane.showConfirmDialog(this, "Do you want to delete this record ?", "Are You Sure ?", 0, 3);
            if (d == 0) {
                Delete();
                Refresh();
            }
            AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
            AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
            AAccLevel_Search_Table_AccLevel.setRowSelectionAllowed(false);
            Clear();
        }
    }//GEN-LAST:event_AAccLevel_AdEdRe_Btn_RemoveAccLevelActionPerformed

    private void AAccLevel_Btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_Btn_BackActionPerformed
        // TODO add your handling code here: 
    }//GEN-LAST:event_AAccLevel_Btn_BackActionPerformed

    private void AAccLevel_Btn_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_Btn_OkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AAccLevel_Btn_OkActionPerformed

    private void AAccLevel_AdEdRe_Btn_RemoveAddedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_AdEdRe_Btn_RemoveAddedActionPerformed
        DefaultTableModel AdEdReTblModel = (DefaultTableModel) AAccLevel_AdEdRe_Table_AccLevel.getModel();
        int[] indexes = AAccLevel_AdEdRe_Table_AccLevel.getSelectedRows();
        int res = 0;
        for (int i = 0; i < indexes.length; i++) {
            res += (i > 0) ? (indexes[i] - indexes[i - 1] - 1) : 0;
            int index = AAccLevel_AdEdRe_Table_AccLevel.convertColumnIndexToModel(indexes[0] + res);
            AdEdReTblModel.removeRow(index);
        }
        if (AdEdReTblModel.getRowCount() == 0) {
            AAccLevel_AdEdRe_Btn_AddAll.setEnabled(false);
            AAccLevel_AdEdRe_Btn_RemoveAdded.setEnabled(false);
        }
    }//GEN-LAST:event_AAccLevel_AdEdRe_Btn_RemoveAddedActionPerformed

    private void AAccLevel_Search_Table_AccLevelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AAccLevel_Search_Table_AccLevelMouseClicked
        AAccLevel_Search_Table_AccLevel.setRowSelectionAllowed(true);
        try {
            ResultSet List_ToAdEdRe = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM emp_accesslevel_detail WHERE Emp_AccL_ID='" + (String) AAccLevel_Search_Table_AccLevel.getValueAt(AAccLevel_Search_Table_AccLevel.getSelectedRow(), 0) + "'");
            while (List_ToAdEdRe.next()) {
                AAccLevel_AdEdRe_TextF_AccLevelID.setText(List_ToAdEdRe.getString("Emp_AccL_ID"));
                AAccLevel_AdEdRe_TextF_AccLevelName.setText(List_ToAdEdRe.getString("Emp_AccL_Name"));
                AAccLevel_AdEdRe_TextA_Discription.setText(List_ToAdEdRe.getString("Emp_AccL_Discription"));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(true);
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(true);
        clear = 0;
        a = 0;
    }//GEN-LAST:event_AAccLevel_Search_Table_AccLevelMouseClicked

    private void AAccLevel_AdEdRe_Btn_AddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AAccLevel_AdEdRe_Btn_AddAllActionPerformed
        DefaultTableModel AdEdReTblModel = (DefaultTableModel) AAccLevel_AdEdRe_Table_AccLevel.getModel();
        try {
            int i = 0;
            while (i < AdEdReTblModel.getRowCount()) {
                ConnectDB.DBConnection().createStatement().executeUpdate("INSERT INTO emp_accesslevel_detail VALUES('" + AdEdReTblModel.getValueAt(i, 0) + "','" + AdEdReTblModel.getValueAt(i, 1) + "','" + AdEdReTblModel.getValueAt(i, 2) + "','" + 1 + "')");
                i++;
            }
            JOptionPane.showMessageDialog(this, "Records added succesfully");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        Refresh();
        a = 0;
        ID = 1;
        AdEdReTblModel.setRowCount(0);
        if (AdEdReTblModel.getRowCount() == 0) {
            AAccLevel_AdEdRe_Btn_AddAll.setEnabled(false);
            AAccLevel_AdEdRe_Btn_RemoveAdded.setEnabled(false);
        }
    }//GEN-LAST:event_AAccLevel_AdEdRe_Btn_AddAllActionPerformed

    private void AAccLevel_Search_TextF_AccLevelIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AAccLevel_Search_TextF_AccLevelIDKeyReleased
        AAccLevel_Search_TextF_AccLevelName.setText("");
        DefaultTableModel List_AdvType = (DefaultTableModel) AAccLevel_Search_Table_AccLevel.getModel();
        try {
            if (!(AAccLevel_Search_TextF_AccLevelID.getText().equals("")) || AAccLevel_Search_TextF_AccLevelID.getText() == null) {
                List_AdvType.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM emp_accesslevel_detail WHERE Emp_AccL_ID LIKE'" + AAccLevel_Search_TextF_AccLevelID.getText() + "%'");
                while (res.next()) {
                    byte status = Byte.parseByte(res.getString("Emp_AccL_Statues"));
                    if (status == 1) {
                        Vector v = new Vector();
                        v.addElement(res.getString("Emp_AccL_ID"));
                        v.addElement(res.getString("Emp_AccL_Name"));
                        v.addElement(res.getString("Emp_AccL_Discription"));
                        List_AdvType.addRow(v);
                    }
                }
            }
            Clear();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
    }//GEN-LAST:event_AAccLevel_Search_TextF_AccLevelIDKeyReleased

    private void AAccLevel_Search_TextF_AccLevelNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AAccLevel_Search_TextF_AccLevelNameKeyReleased
                AAccLevel_Search_TextF_AccLevelID.setText("");
        DefaultTableModel List_AdvType = (DefaultTableModel) AAccLevel_Search_Table_AccLevel.getModel();
        try {
            if (!(AAccLevel_Search_TextF_AccLevelName.getText().equals("")) || AAccLevel_Search_TextF_AccLevelName.getText() == null) {
                List_AdvType.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM emp_accesslevel_detail WHERE Emp_AccL_Name LIKE'" + AAccLevel_Search_TextF_AccLevelName.getText() + "%'");
                while (res.next()) {
                    byte status = Byte.parseByte(res.getString("Emp_AccL_Statues"));
                    if (status == 1) {
                        Vector v = new Vector();
                        v.addElement(res.getString("Emp_AccL_ID"));
                        v.addElement(res.getString("Emp_AccL_Name"));
                        v.addElement(res.getString("Emp_AccL_Discription"));
                        List_AdvType.addRow(v);
                    }
                }
            }
            Clear();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        AAccLevel_AdEdRe_Btn_EditAccLevel.setEnabled(false);
        AAccLevel_AdEdRe_Btn_RemoveAccLevel.setEnabled(false);
    }//GEN-LAST:event_AAccLevel_Search_TextF_AccLevelNameKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane AAccLeve_LPane_SearchAccLevel;
    private javax.swing.JButton AAccLevel_AdEdRe_Btn_AddAccLevel;
    private javax.swing.JButton AAccLevel_AdEdRe_Btn_AddAll;
    private javax.swing.JButton AAccLevel_AdEdRe_Btn_EditAccLevel;
    private javax.swing.JButton AAccLevel_AdEdRe_Btn_RemoveAccLevel;
    private javax.swing.JButton AAccLevel_AdEdRe_Btn_RemoveAdded;
    private javax.swing.JLabel AAccLevel_AdEdRe_Label_AccLevelID;
    private javax.swing.JLabel AAccLevel_AdEdRe_Label_AccLevelName;
    private javax.swing.JLabel AAccLevel_AdEdRe_Label_Discription;
    private javax.swing.JTable AAccLevel_AdEdRe_Table_AccLevel;
    private javax.swing.JTextArea AAccLevel_AdEdRe_TextA_Discription;
    private javax.swing.JTextField AAccLevel_AdEdRe_TextF_AccLevelID;
    private javax.swing.JTextField AAccLevel_AdEdRe_TextF_AccLevelName;
    private javax.swing.JButton AAccLevel_Btn_Back;
    private javax.swing.JButton AAccLevel_Btn_Ok;
    private javax.swing.JLayeredPane AAccLevel_LPane_AdEdReAccLevel;
    private javax.swing.JLabel AAccLevel_Label_Heading;
    private javax.swing.JButton AAccLevel_Search_Btn_ShowAllAccLevels;
    private javax.swing.JLabel AAccLevel_Search_Label_AccLevelID;
    private javax.swing.JLabel AAccLevel_Search_Label_AccLevelName;
    private javax.swing.JTable AAccLevel_Search_Table_AccLevel;
    private javax.swing.JTextField AAccLevel_Search_TextF_AccLevelID;
    private javax.swing.JTextField AAccLevel_Search_TextF_AccLevelName;
    private javax.swing.JScrollPane AddCustStage_Scp_1;
    private javax.swing.JScrollPane Emp_Scp_1;
    private javax.swing.JScrollPane Emp_Scp_2;
    // End of variables declaration//GEN-END:variables

    private void Clear() {
        AAccLevel_AdEdRe_TextF_AccLevelID.setText("");
        AAccLevel_AdEdRe_TextF_AccLevelName.setText("");
        AAccLevel_AdEdRe_TextA_Discription.setText("");
    }

    private void Update_Query() {
        try {
            ConnectDB.DBConnection().createStatement().executeUpdate("UPDATE emp_accesslevel_detail SET Emp_AccL_Name='" + AAccLevel_AdEdRe_TextF_AccLevelName.getText() + "',Emp_AccL_Discription='" + AAccLevel_AdEdRe_TextA_Discription.getText() + "'WHERE Emp_AccL_ID='" + AAccLevel_AdEdRe_TextF_AccLevelID.getText() + "'");
            JOptionPane.showMessageDialog(this, "Record edited successfully.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error\nTry Again..!", "Error", 0);
        }
    }

    private void Delete() {
        try {
            ConnectDB.DBConnection().createStatement().executeUpdate("UPDATE emp_accesslevel_detail SET Emp_AccL_Statues='" + 0 + "' WHERE Emp_AccL_ID='" + AAccLevel_AdEdRe_TextF_AccLevelID.getText() + "'");
            JOptionPane.showMessageDialog(this, "Record is deleted successfully.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error\nTry Again..!", "Error", 0);
        }
    }

    private void Refresh() {//Refresh Search Table
        DefaultTableModel List_BType = (DefaultTableModel) AAccLevel_Search_Table_AccLevel.getModel();
        if (List_BType.getRowCount() > 0) {
            if (!AAccLevel_Search_TextF_AccLevelID.getText().equals("")) {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM emp_accesslevel_detail WHERE Emp_AccL_ID LIKE'" + AAccLevel_Search_TextF_AccLevelID.getText() + "%'");
                    while (res.next()) {
                        Vector v = new Vector();
                        byte status = Byte.parseByte(res.getString("Emp_AccL_Statues"));
                        if (status == 1) {
                            v.addElement(res.getString("Emp_AccL_ID"));
                            v.addElement(res.getString("Emp_AccL_Name"));
                            v.addElement(res.getString("Emp_AccL_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else if (!AAccLevel_Search_TextF_AccLevelName.getText().equals("")) {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM emp_accesslevel_detail WHERE Emp_AccL_Name LIKE'" + AAccLevel_Search_TextF_AccLevelName.getText() + "%'");
                    while (res.next()) {
                        Vector v = new Vector();
                        byte status = Byte.parseByte(res.getString("Emp_AccL_Statues"));
                        if (status == 1) {
                            v.addElement(res.getString("Emp_AccL_ID"));
                            v.addElement(res.getString("Emp_AccL_Name"));
                            v.addElement(res.getString("Emp_AccL_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM emp_accesslevel_detail");
                    while (res.next()) {
                        Vector v = new Vector();
                        byte status = Byte.parseByte(res.getString("Emp_AccL_Statues"));
                        if (status == 1) {
                            v.addElement(res.getString("Emp_AccL_ID"));
                            v.addElement(res.getString("Emp_AccL_Name"));
                            v.addElement(res.getString("Emp_AccL_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }

}
