/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Admin;

import ConnectDB.ConnectDB;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ABType extends javax.swing.JPanel {

    /**
     * Creates new form ABType
     */
    public ABType() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ABType_Label_Heading = new javax.swing.JLabel();
        ABType_LPane_SearchABType = new javax.swing.JLayeredPane();
        ABType_Search_Label_BillTypeID = new javax.swing.JLabel();
        ABType_Search_Label_BillTypeName = new javax.swing.JLabel();
        CustStage_Scp_1 = new javax.swing.JScrollPane();
        ABType_Search_Table_BType = new javax.swing.JTable();
        ABType_Search_Btn_ShowAllBType = new javax.swing.JButton();
        ABType_Search_TextF_BillTypeID = new javax.swing.JTextField();
        ABType_Search_TextF_BillTypeName = new javax.swing.JTextField();
        ABType_LPane_AdEdReBType = new javax.swing.JLayeredPane();
        ABType_AdEdRe_Label_BillTypeID = new javax.swing.JLabel();
        ABType_AdEdRe_Label_BillTypeName = new javax.swing.JLabel();
        CustStage_Scp_2 = new javax.swing.JScrollPane();
        ABType_AdEdRe_Table_BType = new javax.swing.JTable();
        AddCustStage_Scp_3 = new javax.swing.JScrollPane();
        ABType_AdEdRe_TextA_Discription = new javax.swing.JTextArea();
        ABType_AdEdRe_Label_Discription = new javax.swing.JLabel();
        ABType_AdEdRe_Btn_AddBType = new javax.swing.JButton();
        ABType_AdEdRe_Btn_EditBType = new javax.swing.JButton();
        ABType_AdEdRe_Btn_RemoveBType = new javax.swing.JButton();
        ABType_AdEdRe_Btn_RemoveAdded = new javax.swing.JButton();
        ABType_AdEdRe_Btn_AddAll = new javax.swing.JButton();
        ABType_AdEdRe_TextF_BTypeID = new javax.swing.JTextField();
        ABType_AdEdRe_TextF_BTypeName = new javax.swing.JTextField();
        ABType_Btn_Back = new javax.swing.JButton();
        ABType_Btn_Ok = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        ABType_Label_Heading.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        ABType_Label_Heading.setForeground(new java.awt.Color(51, 51, 51));
        ABType_Label_Heading.setText("Bill Types");

        ABType_LPane_SearchABType.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Search Bill Types", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 11), new java.awt.Color(104, 2, 5))); // NOI18N
        ABType_LPane_SearchABType.setToolTipText("");
        ABType_LPane_SearchABType.setPreferredSize(new java.awt.Dimension(1052, 216));
        ABType_LPane_SearchABType.setVerifyInputWhenFocusTarget(false);

        ABType_Search_Label_BillTypeID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_Search_Label_BillTypeID.setForeground(new java.awt.Color(51, 51, 51));
        ABType_Search_Label_BillTypeID.setText("Bill Type ID : ");

        ABType_Search_Label_BillTypeName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_Search_Label_BillTypeName.setForeground(new java.awt.Color(51, 51, 51));
        ABType_Search_Label_BillTypeName.setText("Bill Type Name : ");

        ABType_Search_Table_BType.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ABType_Search_Table_BType.setForeground(new java.awt.Color(51, 51, 51));
        ABType_Search_Table_BType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill Type ID", "Bill Type Name", "Discription"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ABType_Search_Table_BType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_Search_Table_BType.setGridColor(new java.awt.Color(102, 102, 102));
        ABType_Search_Table_BType.setIntercellSpacing(new java.awt.Dimension(1, 0));
        ABType_Search_Table_BType.setRowHeight(17);
        ABType_Search_Table_BType.setSelectionBackground(new java.awt.Color(46, 141, 216));
        ABType_Search_Table_BType.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ABType_Search_Table_BType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ABType_Search_Table_BTypeMouseClicked(evt);
            }
        });
        CustStage_Scp_1.setViewportView(ABType_Search_Table_BType);

        ABType_Search_Btn_ShowAllBType.setBackground(new java.awt.Color(204, 204, 204));
        ABType_Search_Btn_ShowAllBType.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ABType_Search_Btn_ShowAllBType.setForeground(new java.awt.Color(51, 51, 51));
        ABType_Search_Btn_ShowAllBType.setText("Show All Bill Types");
        ABType_Search_Btn_ShowAllBType.setToolTipText("Show All Bill Types");
        ABType_Search_Btn_ShowAllBType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_Search_Btn_ShowAllBType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_Search_Btn_ShowAllBTypeActionPerformed(evt);
            }
        });

        ABType_Search_TextF_BillTypeID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ABType_Search_TextF_BillTypeID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ABType_Search_TextF_BillTypeIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ABType_Search_TextF_BillTypeIDKeyTyped(evt);
            }
        });

        ABType_Search_TextF_BillTypeName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ABType_Search_TextF_BillTypeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ABType_Search_TextF_BillTypeNameKeyReleased(evt);
            }
        });

        ABType_LPane_SearchABType.setLayer(ABType_Search_Label_BillTypeID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_SearchABType.setLayer(ABType_Search_Label_BillTypeName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_SearchABType.setLayer(CustStage_Scp_1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_SearchABType.setLayer(ABType_Search_Btn_ShowAllBType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_SearchABType.setLayer(ABType_Search_TextF_BillTypeID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_SearchABType.setLayer(ABType_Search_TextF_BillTypeName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ABType_LPane_SearchABTypeLayout = new javax.swing.GroupLayout(ABType_LPane_SearchABType);
        ABType_LPane_SearchABType.setLayout(ABType_LPane_SearchABTypeLayout);
        ABType_LPane_SearchABTypeLayout.setHorizontalGroup(
            ABType_LPane_SearchABTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ABType_LPane_SearchABTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ABType_LPane_SearchABTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ABType_LPane_SearchABTypeLayout.createSequentialGroup()
                        .addGroup(ABType_LPane_SearchABTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ABType_Search_Label_BillTypeName)
                            .addComponent(ABType_Search_Label_BillTypeID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ABType_LPane_SearchABTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ABType_Search_TextF_BillTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ABType_Search_TextF_BillTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ABType_LPane_SearchABTypeLayout.createSequentialGroup()
                        .addComponent(ABType_Search_Btn_ShowAllBType)
                        .addGap(49, 49, 49)))
                .addComponent(CustStage_Scp_1, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
                .addContainerGap())
        );
        ABType_LPane_SearchABTypeLayout.setVerticalGroup(
            ABType_LPane_SearchABTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ABType_LPane_SearchABTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ABType_LPane_SearchABTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ABType_Search_Label_BillTypeID)
                    .addComponent(ABType_Search_TextF_BillTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ABType_LPane_SearchABTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ABType_Search_Label_BillTypeName)
                    .addComponent(ABType_Search_TextF_BillTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(ABType_Search_Btn_ShowAllBType)
                .addContainerGap(83, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ABType_LPane_SearchABTypeLayout.createSequentialGroup()
                .addComponent(CustStage_Scp_1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        ABType_LPane_AdEdReBType.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Add / Edit / Remove Bill Types", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 11), new java.awt.Color(104, 2, 5))); // NOI18N
        ABType_LPane_AdEdReBType.setToolTipText("");
        ABType_LPane_AdEdReBType.setPreferredSize(new java.awt.Dimension(1052, 216));
        ABType_LPane_AdEdReBType.setVerifyInputWhenFocusTarget(false);

        ABType_AdEdRe_Label_BillTypeID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Label_BillTypeID.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Label_BillTypeID.setText("Bill Type ID : ");

        ABType_AdEdRe_Label_BillTypeName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Label_BillTypeName.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Label_BillTypeName.setText("Bill Type Name : ");

        ABType_AdEdRe_Table_BType.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ABType_AdEdRe_Table_BType.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Table_BType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill Type ID", "Bill Type Name", "Discription"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ABType_AdEdRe_Table_BType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_AdEdRe_Table_BType.setGridColor(new java.awt.Color(102, 102, 102));
        ABType_AdEdRe_Table_BType.setIntercellSpacing(new java.awt.Dimension(1, 0));
        ABType_AdEdRe_Table_BType.setRowHeight(17);
        ABType_AdEdRe_Table_BType.setSelectionBackground(new java.awt.Color(46, 141, 216));
        ABType_AdEdRe_Table_BType.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CustStage_Scp_2.setViewportView(ABType_AdEdRe_Table_BType);

        AddCustStage_Scp_3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        AddCustStage_Scp_3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        ABType_AdEdRe_TextA_Discription.setColumns(20);
        ABType_AdEdRe_TextA_Discription.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ABType_AdEdRe_TextA_Discription.setLineWrap(true);
        ABType_AdEdRe_TextA_Discription.setRows(5);
        ABType_AdEdRe_TextA_Discription.setToolTipText("Discription about this Bill Tpye");
        ABType_AdEdRe_TextA_Discription.setWrapStyleWord(true);
        AddCustStage_Scp_3.setViewportView(ABType_AdEdRe_TextA_Discription);

        ABType_AdEdRe_Label_Discription.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Label_Discription.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Label_Discription.setText("Discription : ");

        ABType_AdEdRe_Btn_AddBType.setBackground(new java.awt.Color(204, 204, 204));
        ABType_AdEdRe_Btn_AddBType.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Btn_AddBType.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Btn_AddBType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/Add_plus.png"))); // NOI18N
        ABType_AdEdRe_Btn_AddBType.setText("Add");
        ABType_AdEdRe_Btn_AddBType.setToolTipText("Add Bill Type ");
        ABType_AdEdRe_Btn_AddBType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_AdEdRe_Btn_AddBType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_AdEdRe_Btn_AddBTypeActionPerformed(evt);
            }
        });

        ABType_AdEdRe_Btn_EditBType.setBackground(new java.awt.Color(204, 204, 204));
        ABType_AdEdRe_Btn_EditBType.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Btn_EditBType.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Btn_EditBType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/Edit_pencil.png"))); // NOI18N
        ABType_AdEdRe_Btn_EditBType.setText("Edit");
        ABType_AdEdRe_Btn_EditBType.setToolTipText("Edit Bill Type");
        ABType_AdEdRe_Btn_EditBType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_AdEdRe_Btn_EditBType.setEnabled(false);
        ABType_AdEdRe_Btn_EditBType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_AdEdRe_Btn_EditBTypeActionPerformed(evt);
            }
        });

        ABType_AdEdRe_Btn_RemoveBType.setBackground(new java.awt.Color(204, 204, 204));
        ABType_AdEdRe_Btn_RemoveBType.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Btn_RemoveBType.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Btn_RemoveBType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/trash_bin.png"))); // NOI18N
        ABType_AdEdRe_Btn_RemoveBType.setText("Remove");
        ABType_AdEdRe_Btn_RemoveBType.setToolTipText("Remove Bill Type");
        ABType_AdEdRe_Btn_RemoveBType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_AdEdRe_Btn_RemoveBType.setEnabled(false);
        ABType_AdEdRe_Btn_RemoveBType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_AdEdRe_Btn_RemoveBTypeActionPerformed(evt);
            }
        });

        ABType_AdEdRe_Btn_RemoveAdded.setBackground(new java.awt.Color(204, 204, 204));
        ABType_AdEdRe_Btn_RemoveAdded.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Btn_RemoveAdded.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Btn_RemoveAdded.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/trash_bin.png"))); // NOI18N
        ABType_AdEdRe_Btn_RemoveAdded.setText("Remove");
        ABType_AdEdRe_Btn_RemoveAdded.setToolTipText("Remove Added");
        ABType_AdEdRe_Btn_RemoveAdded.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_AdEdRe_Btn_RemoveAdded.setEnabled(false);
        ABType_AdEdRe_Btn_RemoveAdded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_AdEdRe_Btn_RemoveAddedActionPerformed(evt);
            }
        });

        ABType_AdEdRe_Btn_AddAll.setBackground(new java.awt.Color(204, 204, 204));
        ABType_AdEdRe_Btn_AddAll.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ABType_AdEdRe_Btn_AddAll.setForeground(new java.awt.Color(51, 51, 51));
        ABType_AdEdRe_Btn_AddAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/check.png"))); // NOI18N
        ABType_AdEdRe_Btn_AddAll.setText("Add All");
        ABType_AdEdRe_Btn_AddAll.setToolTipText("Add All");
        ABType_AdEdRe_Btn_AddAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_AdEdRe_Btn_AddAll.setEnabled(false);
        ABType_AdEdRe_Btn_AddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_AdEdRe_Btn_AddAllActionPerformed(evt);
            }
        });

        ABType_AdEdRe_TextF_BTypeID.setEditable(false);
        ABType_AdEdRe_TextF_BTypeID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        ABType_AdEdRe_TextF_BTypeName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        ABType_AdEdRe_TextF_BTypeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ABType_AdEdRe_TextF_BTypeNameKeyTyped(evt);
            }
        });

        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Label_BillTypeID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Label_BillTypeName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(CustStage_Scp_2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(AddCustStage_Scp_3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Label_Discription, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Btn_AddBType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Btn_EditBType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Btn_RemoveBType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Btn_RemoveAdded, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_Btn_AddAll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_TextF_BTypeID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ABType_LPane_AdEdReBType.setLayer(ABType_AdEdRe_TextF_BTypeName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ABType_LPane_AdEdReBTypeLayout = new javax.swing.GroupLayout(ABType_LPane_AdEdReBType);
        ABType_LPane_AdEdReBType.setLayout(ABType_LPane_AdEdReBTypeLayout);
        ABType_LPane_AdEdReBTypeLayout.setHorizontalGroup(
            ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ABType_AdEdRe_Label_BillTypeName)
                    .addComponent(ABType_AdEdRe_Label_BillTypeID)
                    .addComponent(ABType_AdEdRe_Label_Discription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                        .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddCustStage_Scp_3, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ABType_AdEdRe_TextF_BTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ABType_AdEdRe_Btn_EditBType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ABType_AdEdRe_Btn_AddBType, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ABType_AdEdRe_Btn_RemoveBType)))
                    .addComponent(ABType_AdEdRe_TextF_BTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CustStage_Scp_2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ABType_AdEdRe_Btn_AddAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ABType_AdEdRe_Btn_RemoveAdded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ABType_LPane_AdEdReBTypeLayout.setVerticalGroup(
            ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ABType_AdEdRe_Label_BillTypeID)
                    .addComponent(ABType_AdEdRe_TextF_BTypeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                        .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ABType_AdEdRe_Label_BillTypeName)
                            .addComponent(ABType_AdEdRe_TextF_BTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ABType_LPane_AdEdReBTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddCustStage_Scp_3)
                            .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                                .addComponent(ABType_AdEdRe_Label_Discription)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                        .addComponent(ABType_AdEdRe_Btn_AddBType, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(ABType_AdEdRe_Btn_EditBType, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(ABType_AdEdRe_Btn_RemoveBType, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(ABType_AdEdRe_Btn_RemoveAdded)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ABType_AdEdRe_Btn_AddAll, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(ABType_LPane_AdEdReBTypeLayout.createSequentialGroup()
                .addComponent(CustStage_Scp_2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        ABType_Btn_Back.setBackground(new java.awt.Color(204, 204, 204));
        ABType_Btn_Back.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ABType_Btn_Back.setForeground(new java.awt.Color(51, 51, 51));
        ABType_Btn_Back.setText("Back");
        ABType_Btn_Back.setToolTipText("Back");
        ABType_Btn_Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_Btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_Btn_BackActionPerformed(evt);
            }
        });

        ABType_Btn_Ok.setBackground(new java.awt.Color(204, 204, 204));
        ABType_Btn_Ok.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ABType_Btn_Ok.setForeground(new java.awt.Color(51, 51, 51));
        ABType_Btn_Ok.setText("Ok");
        ABType_Btn_Ok.setToolTipText("Ok");
        ABType_Btn_Ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ABType_Btn_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABType_Btn_OkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ABType_LPane_AdEdReBType, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(484, 484, 484)
                                    .addComponent(ABType_Label_Heading))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(ABType_LPane_SearchABType, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ABType_Btn_Back)
                        .addGap(6, 6, 6)
                        .addComponent(ABType_Btn_Ok)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ABType_Label_Heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ABType_LPane_SearchABType, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ABType_LPane_AdEdReBType, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ABType_Btn_Back)
                    .addComponent(ABType_Btn_Ok))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ABType_Search_Btn_ShowAllBTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_Search_Btn_ShowAllBTypeActionPerformed
        Clear();
        ABType_Search_TextF_BillTypeID.setText("");
        ABType_Search_TextF_BillTypeName.setText("");
        try {
            DefaultTableModel List_AdvType = (DefaultTableModel) ABType_Search_Table_BType.getModel();
            List_AdvType.setRowCount(0);
            ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM bill_type");
            while (res.next()) {
                byte status = Byte.parseByte(res.getString("Bill_Type_Status"));
                if (status == 1) {
                    Vector v = new Vector();
                    v.addElement(res.getString("Bill_Type_ID"));
                    v.addElement(res.getString("Bill_Type_Name"));
                    v.addElement(res.getString("Bill_Type_Discription"));
                    List_AdvType.addRow(v);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        ABType_AdEdRe_Btn_EditBType.setEnabled(false);
        ABType_AdEdRe_Btn_RemoveBType.setEnabled(false);
    }//GEN-LAST:event_ABType_Search_Btn_ShowAllBTypeActionPerformed

    private void ABType_AdEdRe_Btn_EditBTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_AdEdRe_Btn_EditBTypeActionPerformed
        if (!((ABType_AdEdRe_TextF_BTypeID.getText().equals("")) || (ABType_AdEdRe_TextF_BTypeID.getText() == null))) {
            if (!((ABType_AdEdRe_TextF_BTypeName.getText().equals("")) || (ABType_AdEdRe_TextF_BTypeName.getText() == null))) {
                int u = JOptionPane.showConfirmDialog(this, "Do you want to update this Record ?", "Are You Sure ?", 0, 3);
                if (u == 0) {
                    Update_Query();
                    Refresh();
                }
                ABType_AdEdRe_Btn_EditBType.setEnabled(false);
                ABType_AdEdRe_Btn_RemoveBType.setEnabled(false);
                ABType_Search_Table_BType.setRowSelectionAllowed(false);
                Clear();
            } else {
                JOptionPane.showMessageDialog(this, "Bill type name field is empty", "Error", 0);
                ABType_AdEdRe_TextF_BTypeName.grabFocus();
            }
        }
    }//GEN-LAST:event_ABType_AdEdRe_Btn_EditBTypeActionPerformed

    private void ABType_AdEdRe_Btn_RemoveBTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_AdEdRe_Btn_RemoveBTypeActionPerformed
        if (!((ABType_AdEdRe_TextF_BTypeID.getText().equals("")) || (ABType_AdEdRe_TextF_BTypeID.getText() == null))) {
            int d = JOptionPane.showConfirmDialog(this, "Do you want to delete this record ?", "Are You Sure ?", 0, 3);
            if (d == 0) {
                Delete();
                Refresh();
            }
        }
        ABType_AdEdRe_Btn_EditBType.setEnabled(false);
        ABType_AdEdRe_Btn_RemoveBType.setEnabled(false);
        ABType_Search_Table_BType.setRowSelectionAllowed(false);
        Clear();
    }//GEN-LAST:event_ABType_AdEdRe_Btn_RemoveBTypeActionPerformed

    private void ABType_AdEdRe_Btn_RemoveAddedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_AdEdRe_Btn_RemoveAddedActionPerformed
        DefaultTableModel AdEdReTblModel = (DefaultTableModel) ABType_AdEdRe_Table_BType.getModel();
        int[] indexes = ABType_AdEdRe_Table_BType.getSelectedRows();
        int res = 0;
        for (int i = 0; i < indexes.length; i++) {
            res += (i > 0) ? (indexes[i] - indexes[i - 1] - 1) : 0;
            int index = ABType_AdEdRe_Table_BType.convertColumnIndexToModel(indexes[0] + res);
            AdEdReTblModel.removeRow(index);
        }
        if (AdEdReTblModel.getRowCount() == 0) {
            ABType_AdEdRe_Btn_RemoveAdded.setEnabled(false);
            ABType_AdEdRe_Btn_AddAll.setEnabled(false);
        }
    }//GEN-LAST:event_ABType_AdEdRe_Btn_RemoveAddedActionPerformed

    private void ABType_AdEdRe_Btn_AddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_AdEdRe_Btn_AddAllActionPerformed
        DefaultTableModel AdEdReTblModel = (DefaultTableModel) ABType_AdEdRe_Table_BType.getModel();
        try {
            int i = 0;
            while (i < AdEdReTblModel.getRowCount()) {
                ConnectDB.DBConnection().createStatement().executeUpdate("INSERT INTO bill_type VALUES('" + AdEdReTblModel.getValueAt(i, 0) + "','" + AdEdReTblModel.getValueAt(i, 1) + "','" + AdEdReTblModel.getValueAt(i, 2) + "','" + 1 + "')");
                i++;
            }
            JOptionPane.showMessageDialog(this, "Records added succesfully");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        Refresh();
        a = 0;
        ID = 1;
        AdEdReTblModel.setRowCount(0);
        if (AdEdReTblModel.getRowCount() == 0) {
            ABType_AdEdRe_Btn_AddAll.setEnabled(false);
            ABType_AdEdRe_Btn_RemoveAdded.setEnabled(false);
        }
    }//GEN-LAST:event_ABType_AdEdRe_Btn_AddAllActionPerformed

    private void ABType_Btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_Btn_BackActionPerformed
        // TODSup_Label_Headingcode here:
    }//GEN-LAST:event_ABType_Btn_BackActionPerformed

    private void ABType_Btn_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_Btn_OkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ABType_Btn_OkActionPerformed
    private int a = 0;
    private int b = 0;
    private int clear = 0;
    private int ID = 1;
    private void ABType_AdEdRe_Btn_AddBTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABType_AdEdRe_Btn_AddBTypeActionPerformed
        ABType_Search_Table_BType.setRowSelectionAllowed(false);
        try {
            DefaultTableModel AdEdReTblModel = (DefaultTableModel) ABType_AdEdRe_Table_BType.getModel();
            ResultSet res_1 = ConnectDB.DBConnection().createStatement().executeQuery("SELECT Bill_Type_ID FROM bill_type");
            if (!res_1.next()) {// if no records in table
                if (b == 0) {// first record
                    ABType_AdEdRe_TextF_BTypeID.setText("" + ID);
                    b = 1;
                } else if (b == 1) {//next records
                    if (!((ABType_AdEdRe_TextF_BTypeName.getText().equals("")) || (ABType_AdEdRe_TextF_BTypeName.getText() == null))) {//check that bill type name field empty
                        Vector v = new Vector();// Add to AdEdRe Table
                        v.addElement(ABType_AdEdRe_TextF_BTypeID.getText());
                        v.addElement(ABType_AdEdRe_TextF_BTypeName.getText());
                        v.addElement(ABType_AdEdRe_TextA_Discription.getText());
                        AdEdReTblModel.addRow(v);
                        ID++;// ID increment
                        Clear();
                        ABType_AdEdRe_TextF_BTypeID.setText("" + ID);
                    } else {//if bill type name field empty
                        JOptionPane.showMessageDialog(this, "Bill type name field is empty", "Error", 0);
                        ABType_AdEdRe_TextF_BTypeName.grabFocus();
                    }
                }
            } else {//if table filled with data
                if (a == 0) {// check text fields not empty // for the first set of data to table
                    if (clear == 0) { //// clear text fields data from search table
                        Clear();
                        clear = 1;
                    }
                    if (AdEdReTblModel.getRowCount() == 0) {
                        res_1.last();// get last ID no
                        ID = Integer.parseInt(res_1.getString("Bill_Type_ID"));
                        ID++;// ID increment
                        //System.out.println(ID);
                        ABType_AdEdRe_TextF_BTypeID.setText("" + ID);
                    } else {
                        ID = Integer.parseInt((String) AdEdReTblModel.getValueAt(AdEdReTblModel.getRowCount() - 1, 0));// get ID last ID no in AdEdRe Table
                        ID++;//ID increment
                        ABType_AdEdRe_TextF_BTypeID.setText("" + ID);
                    }
                    a = 1;
                } else if (a == 1) {// if first data set added to db
                    if (!((ABType_AdEdRe_TextF_BTypeName.getText().equals("")) || (ABType_AdEdRe_TextF_BTypeName.getText() == null))) {
                        Vector v = new Vector();
                        v.addElement(ABType_AdEdRe_TextF_BTypeID.getText());
                        v.addElement(ABType_AdEdRe_TextF_BTypeName.getText());
                        v.addElement(ABType_AdEdRe_TextA_Discription.getText());
                        AdEdReTblModel.addRow(v);
                        ID++;
                        Clear();
                        ABType_AdEdRe_TextF_BTypeID.setText("" + ID);
                    } else {
                        JOptionPane.showMessageDialog(this, "Bill type name field is empty", "Error", 0);
                        ABType_AdEdRe_TextF_BTypeName.grabFocus();
                    }
                }
            }
            clear = 2;
            ////////////////////////////////////////////////////////////////////////////////////////////////////////
            if (AdEdReTblModel.getRowCount() > 0) {
                ABType_AdEdRe_Btn_RemoveAdded.setEnabled(true);
                ABType_AdEdRe_Btn_AddAll.setEnabled(true);
            }
            ABType_AdEdRe_Btn_EditBType.setEnabled(false);
            ABType_AdEdRe_Btn_RemoveBType.setEnabled(false);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_ABType_AdEdRe_Btn_AddBTypeActionPerformed

    private void ABType_Search_TextF_BillTypeIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ABType_Search_TextF_BillTypeIDKeyReleased
        ABType_Search_TextF_BillTypeName.setText("");
        DefaultTableModel List_AdvType = (DefaultTableModel) ABType_Search_Table_BType.getModel();
        try {
            if (!(ABType_Search_TextF_BillTypeID.getText().equals("")) || ABType_Search_TextF_BillTypeID.getText() == null) {
                List_AdvType.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM bill_type WHERE Bill_Type_ID LIKE'" + ABType_Search_TextF_BillTypeID.getText() + "%'");
                while (res.next()) {
                    byte status = Byte.parseByte(res.getString("Bill_Type_Status"));
                    if (status == 1) {
                        Vector v = new Vector();
                        v.addElement(res.getString("Bill_Type_ID"));
                        v.addElement(res.getString("Bill_Type_Name"));
                        v.addElement(res.getString("Bill_Type_Discription"));
                        List_AdvType.addRow(v);
                    }
                }
            }
            Clear();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        ABType_AdEdRe_Btn_EditBType.setEnabled(false);
        ABType_AdEdRe_Btn_RemoveBType.setEnabled(false);
    }//GEN-LAST:event_ABType_Search_TextF_BillTypeIDKeyReleased

    private void ABType_Search_TextF_BillTypeNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ABType_Search_TextF_BillTypeNameKeyReleased
        ABType_Search_TextF_BillTypeID.setText("");
        DefaultTableModel List_AdvType = (DefaultTableModel) ABType_Search_Table_BType.getModel();
        try {
            if (!(ABType_Search_TextF_BillTypeName.getText().equals("")) || ABType_Search_TextF_BillTypeName.getText() == null) {
                List_AdvType.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM bill_type WHERE Bill_Type_Name LIKE'" + ABType_Search_TextF_BillTypeName.getText() + "%'");
                while (res.next()) {
                    byte status = Byte.parseByte(res.getString("Bill_Type_Status"));
                    if (status == 1) {
                        Vector v = new Vector();
                        v.addElement(res.getString("Bill_Type_ID"));
                        v.addElement(res.getString("Bill_Type_Name"));
                        v.addElement(res.getString("Bill_Type_Discription"));
                        List_AdvType.addRow(v);
                    }
                }
            }
            Clear();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        ABType_AdEdRe_Btn_EditBType.setEnabled(false);
        ABType_AdEdRe_Btn_RemoveBType.setEnabled(false);
    }//GEN-LAST:event_ABType_Search_TextF_BillTypeNameKeyReleased

    private void ABType_Search_Table_BTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ABType_Search_Table_BTypeMouseClicked
        ABType_Search_Table_BType.setRowSelectionAllowed(true);
        try {
            ResultSet List_ToAdEdRe = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM bill_type WHERE Bill_Type_ID='" + (String) ABType_Search_Table_BType.getValueAt(ABType_Search_Table_BType.getSelectedRow(), 0) + "'");
            while (List_ToAdEdRe.next()) {
                ABType_AdEdRe_TextF_BTypeID.setText(List_ToAdEdRe.getString("Bill_Type_ID"));
                ABType_AdEdRe_TextF_BTypeName.setText(List_ToAdEdRe.getString("Bill_Type_Name"));
                ABType_AdEdRe_TextA_Discription.setText(List_ToAdEdRe.getString("Bill_Type_Discription"));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        ABType_AdEdRe_Btn_EditBType.setEnabled(true);
        ABType_AdEdRe_Btn_RemoveBType.setEnabled(true);
        clear = 0;
        a = 0;
    }//GEN-LAST:event_ABType_Search_Table_BTypeMouseClicked

    private void ABType_Search_TextF_BillTypeIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ABType_Search_TextF_BillTypeIDKeyTyped
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_ABType_Search_TextF_BillTypeIDKeyTyped

    private void ABType_AdEdRe_TextF_BTypeNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ABType_AdEdRe_TextF_BTypeNameKeyTyped
        if (Character.getType(evt.getKeyChar()) == 15 && !(Character.getName(evt.getKeyChar()).equals("BACKSPACE"))) {
            ABType_AdEdRe_TextA_Discription.grabFocus();
        }
    }//GEN-LAST:event_ABType_AdEdRe_TextF_BTypeNameKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ABType_AdEdRe_Btn_AddAll;
    private javax.swing.JButton ABType_AdEdRe_Btn_AddBType;
    private javax.swing.JButton ABType_AdEdRe_Btn_EditBType;
    private javax.swing.JButton ABType_AdEdRe_Btn_RemoveAdded;
    private javax.swing.JButton ABType_AdEdRe_Btn_RemoveBType;
    private javax.swing.JLabel ABType_AdEdRe_Label_BillTypeID;
    private javax.swing.JLabel ABType_AdEdRe_Label_BillTypeName;
    private javax.swing.JLabel ABType_AdEdRe_Label_Discription;
    private javax.swing.JTable ABType_AdEdRe_Table_BType;
    private javax.swing.JTextArea ABType_AdEdRe_TextA_Discription;
    private javax.swing.JTextField ABType_AdEdRe_TextF_BTypeID;
    private javax.swing.JTextField ABType_AdEdRe_TextF_BTypeName;
    private javax.swing.JButton ABType_Btn_Back;
    private javax.swing.JButton ABType_Btn_Ok;
    private javax.swing.JLayeredPane ABType_LPane_AdEdReBType;
    private javax.swing.JLayeredPane ABType_LPane_SearchABType;
    private javax.swing.JLabel ABType_Label_Heading;
    private javax.swing.JButton ABType_Search_Btn_ShowAllBType;
    private javax.swing.JLabel ABType_Search_Label_BillTypeID;
    private javax.swing.JLabel ABType_Search_Label_BillTypeName;
    private javax.swing.JTable ABType_Search_Table_BType;
    private javax.swing.JTextField ABType_Search_TextF_BillTypeID;
    private javax.swing.JTextField ABType_Search_TextF_BillTypeName;
    private javax.swing.JScrollPane AddCustStage_Scp_3;
    private javax.swing.JScrollPane CustStage_Scp_1;
    private javax.swing.JScrollPane CustStage_Scp_2;
    // End of variables declaration//GEN-END:variables

    private void Clear() {
        ABType_AdEdRe_TextF_BTypeID.setText("");
        ABType_AdEdRe_TextF_BTypeName.setText("");
        ABType_AdEdRe_TextA_Discription.setText("");
    }

    private void Update_Query() {
        try {
            ConnectDB.DBConnection().createStatement().executeUpdate("UPDATE bill_type SET Bill_Type_Name='" + ABType_AdEdRe_TextF_BTypeName.getText() + "',Bill_Type_Discription='" + ABType_AdEdRe_TextA_Discription.getText() + "'WHERE Bill_Type_ID='" + ABType_AdEdRe_TextF_BTypeID.getText() + "'");
            JOptionPane.showMessageDialog(this, "Record edited successfully.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error\nTry Again..!", "Error", 0);
        }
    }

    private void Delete() {
        try {
            ConnectDB.DBConnection().createStatement().executeUpdate("UPDATE bill_type SET Bill_Type_Status='" + 0 + "' WHERE Bill_Type_ID='" + ABType_AdEdRe_TextF_BTypeID.getText() + "'");
            JOptionPane.showMessageDialog(this, "Record is deleted successfully.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error\nTry Again..!", "Error", 0);
        }
    }

    private void Refresh() {//Refresh Search Table
        DefaultTableModel List_BType = (DefaultTableModel) ABType_Search_Table_BType.getModel();
        if (List_BType.getRowCount() > 0) {
            if (!ABType_Search_TextF_BillTypeID.getText().equals("")) {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM bill_type WHERE Bill_Type_ID LIKE'" + ABType_Search_TextF_BillTypeID.getText() + "%'");
                    while (res.next()) {
                        Vector v = new Vector();
                        byte status = Byte.parseByte(res.getString("Bill_Type_Status"));
                        if (status == 1) {
                            v.addElement(res.getString("Bill_Type_ID"));
                            v.addElement(res.getString("Bill_Type_Name"));
                            v.addElement(res.getString("Bill_Type_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else if (!ABType_Search_TextF_BillTypeName.getText().equals("")) {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM bill_type WHERE Bill_Type_Name LIKE'" + ABType_Search_TextF_BillTypeName.getText() + "%'");
                    while (res.next()) {
                        Vector v = new Vector();
                        byte status = Byte.parseByte(res.getString("Bill_Type_Status"));
                        if (status == 1) {
                            v.addElement(res.getString("Bill_Type_ID"));
                            v.addElement(res.getString("Bill_Type_Name"));
                            v.addElement(res.getString("Bill_Type_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM bill_type");
                    while (res.next()) {
                        Vector v = new Vector();
                        byte status = Byte.parseByte(res.getString("Bill_Type_Status"));
                        if (status == 1) {
                            v.addElement(res.getString("Bill_Type_ID"));
                            v.addElement(res.getString("Bill_Type_Name"));
                            v.addElement(res.getString("Bill_Type_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }

}
