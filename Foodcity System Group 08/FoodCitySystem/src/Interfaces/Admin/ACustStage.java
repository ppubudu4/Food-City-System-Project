/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.Admin;

import ConnectDB.ConnectDB;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ACustStage extends javax.swing.JPanel {

    /**
     * Creates new form CustStage
     */
    public ACustStage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CustStage_Label_Heading = new javax.swing.JLabel();
        CustStage_LPane_SearchCustStage = new javax.swing.JLayeredPane();
        CustStage_Search_Btn_ShowAllCustStage = new javax.swing.JButton();
        CustStage_Search_Label_CustStageID = new javax.swing.JLabel();
        CustStage_Search_Label_CustStageName = new javax.swing.JLabel();
        CustStage_Scp_1 = new javax.swing.JScrollPane();
        CustStage_Search_Table_CustStage = new javax.swing.JTable();
        CustStage_Search_TextF_CustStageID = new javax.swing.JTextField();
        CustStage_Search_TextF_CustStageName = new javax.swing.JTextField();
        CustStage_LPane_AdEdReCustStage = new javax.swing.JLayeredPane();
        CustStage_AdEdRe_TextF_CustStageID = new javax.swing.JTextField();
        CustStage_AdEdRe_TextF_CustStageName = new javax.swing.JTextField();
        CustStage_AdEdRe_TextF_ActTimFrom = new javax.swing.JTextField();
        CustStage_AdEdRe_TextF_ActTimTo = new javax.swing.JTextField();
        CustStage_AdEdRe_TextF_Discount = new javax.swing.JTextField();
        AddCustStage_Scp_1 = new javax.swing.JScrollPane();
        CustStage_AdEdRe_TextA_Discription = new javax.swing.JTextArea();
        CustStage_AdEdRe_Label_CustStageID = new javax.swing.JLabel();
        CustStage_AdEdRe_Label_CustStageName = new javax.swing.JLabel();
        CustStage_AdEdRe_Label_ActTimFrom = new javax.swing.JLabel();
        CustStage_AdEdRe_Label_Discount = new javax.swing.JLabel();
        CustStage_AdEdRe_Label_ActTimTo = new javax.swing.JLabel();
        CustStage_AdEdRe_Label_Discription = new javax.swing.JLabel();
        Cust_AdEdReCust_Btn_AddCust = new javax.swing.JButton();
        Cust_AdEdReCust_Btn_EditCust = new javax.swing.JButton();
        Cust_AdEdReCust_Btn_RemoveCust = new javax.swing.JButton();
        CustStage_Scp_2 = new javax.swing.JScrollPane();
        CustStage_AdEdRe_Table_CustStage = new javax.swing.JTable();
        CustStage_AdEdRe_Btn_RemoveAdded = new javax.swing.JButton();
        CustStage_AdEdRe_Btn_AddAll = new javax.swing.JButton();
        CustStage_Btn_Ok = new javax.swing.JButton();
        CustStage_Btn_Back = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        CustStage_Label_Heading.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        CustStage_Label_Heading.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_Label_Heading.setText("Customer Stages");

        CustStage_LPane_SearchCustStage.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Search Customer Stages", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 11), new java.awt.Color(104, 2, 5))); // NOI18N
        CustStage_LPane_SearchCustStage.setPreferredSize(new java.awt.Dimension(1052, 216));
        CustStage_LPane_SearchCustStage.setVerifyInputWhenFocusTarget(false);

        CustStage_Search_Btn_ShowAllCustStage.setBackground(new java.awt.Color(204, 204, 204));
        CustStage_Search_Btn_ShowAllCustStage.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        CustStage_Search_Btn_ShowAllCustStage.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_Search_Btn_ShowAllCustStage.setText("Show All Customer Stages");
        CustStage_Search_Btn_ShowAllCustStage.setToolTipText("Show All Customer Stages");
        CustStage_Search_Btn_ShowAllCustStage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustStage_Search_Btn_ShowAllCustStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustStage_Search_Btn_ShowAllCustStageActionPerformed(evt);
            }
        });

        CustStage_Search_Label_CustStageID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_Search_Label_CustStageID.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_Search_Label_CustStageID.setText("Customer Stage ID : ");

        CustStage_Search_Label_CustStageName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_Search_Label_CustStageName.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_Search_Label_CustStageName.setText("Customer Stage Name : ");

        CustStage_Search_Table_CustStage.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_Search_Table_CustStage.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_Search_Table_CustStage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Stage ID", "Stage Name", "Active From (Month)", "Active To (Month)", "Discount", "Discription"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CustStage_Search_Table_CustStage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustStage_Search_Table_CustStage.setGridColor(new java.awt.Color(102, 102, 102));
        CustStage_Search_Table_CustStage.setIntercellSpacing(new java.awt.Dimension(1, 0));
        CustStage_Search_Table_CustStage.setRowHeight(17);
        CustStage_Search_Table_CustStage.setSelectionBackground(new java.awt.Color(46, 141, 216));
        CustStage_Search_Table_CustStage.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CustStage_Search_Table_CustStage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustStage_Search_Table_CustStageMouseClicked(evt);
            }
        });
        CustStage_Scp_1.setViewportView(CustStage_Search_Table_CustStage);

        CustStage_Search_TextF_CustStageID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_Search_TextF_CustStageID.setToolTipText("Customer Active Time From (Month)");
        CustStage_Search_TextF_CustStageID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CustStage_Search_TextF_CustStageIDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CustStage_Search_TextF_CustStageIDKeyTyped(evt);
            }
        });

        CustStage_Search_TextF_CustStageName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_Search_TextF_CustStageName.setToolTipText("Customer Active Time From (Month)");
        CustStage_Search_TextF_CustStageName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CustStage_Search_TextF_CustStageNameKeyReleased(evt);
            }
        });

        CustStage_LPane_SearchCustStage.setLayer(CustStage_Search_Btn_ShowAllCustStage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_SearchCustStage.setLayer(CustStage_Search_Label_CustStageID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_SearchCustStage.setLayer(CustStage_Search_Label_CustStageName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_SearchCustStage.setLayer(CustStage_Scp_1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_SearchCustStage.setLayer(CustStage_Search_TextF_CustStageID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_SearchCustStage.setLayer(CustStage_Search_TextF_CustStageName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout CustStage_LPane_SearchCustStageLayout = new javax.swing.GroupLayout(CustStage_LPane_SearchCustStage);
        CustStage_LPane_SearchCustStage.setLayout(CustStage_LPane_SearchCustStageLayout);
        CustStage_LPane_SearchCustStageLayout.setHorizontalGroup(
            CustStage_LPane_SearchCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustStage_LPane_SearchCustStageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustStage_LPane_SearchCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CustStage_LPane_SearchCustStageLayout.createSequentialGroup()
                        .addGroup(CustStage_LPane_SearchCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CustStage_Search_Label_CustStageName)
                            .addComponent(CustStage_Search_Label_CustStageID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustStage_LPane_SearchCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustStage_Search_TextF_CustStageID, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustStage_Search_TextF_CustStageName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustStage_LPane_SearchCustStageLayout.createSequentialGroup()
                        .addComponent(CustStage_Search_Btn_ShowAllCustStage)
                        .addGap(46, 46, 46)))
                .addComponent(CustStage_Scp_1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );
        CustStage_LPane_SearchCustStageLayout.setVerticalGroup(
            CustStage_LPane_SearchCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustStage_LPane_SearchCustStageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustStage_LPane_SearchCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustStage_Search_Label_CustStageID)
                    .addComponent(CustStage_Search_TextF_CustStageID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CustStage_LPane_SearchCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustStage_Search_Label_CustStageName)
                    .addComponent(CustStage_Search_TextF_CustStageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(CustStage_Search_Btn_ShowAllCustStage)
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(CustStage_LPane_SearchCustStageLayout.createSequentialGroup()
                .addComponent(CustStage_Scp_1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        CustStage_LPane_AdEdReCustStage.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "Add / Edit / Remove Customer Stages", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 11), new java.awt.Color(104, 2, 5))); // NOI18N
        CustStage_LPane_AdEdReCustStage.setPreferredSize(new java.awt.Dimension(1052, 216));
        CustStage_LPane_AdEdReCustStage.setVerifyInputWhenFocusTarget(false);

        CustStage_AdEdRe_TextF_CustStageID.setEditable(false);
        CustStage_AdEdRe_TextF_CustStageID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_AdEdRe_TextF_CustStageID.setToolTipText("Customer Stage ID");

        CustStage_AdEdRe_TextF_CustStageName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_AdEdRe_TextF_CustStageName.setToolTipText("Customer Stage Name");
        CustStage_AdEdRe_TextF_CustStageName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CustStage_AdEdRe_TextF_CustStageNameKeyTyped(evt);
            }
        });

        CustStage_AdEdRe_TextF_ActTimFrom.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_AdEdRe_TextF_ActTimFrom.setToolTipText("Customer Active Time From (Month)");
        CustStage_AdEdRe_TextF_ActTimFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CustStage_AdEdRe_TextF_ActTimFromKeyTyped(evt);
            }
        });

        CustStage_AdEdRe_TextF_ActTimTo.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_AdEdRe_TextF_ActTimTo.setToolTipText("Customer Active Time To (Month)");
        CustStage_AdEdRe_TextF_ActTimTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CustStage_AdEdRe_TextF_ActTimToKeyTyped(evt);
            }
        });

        CustStage_AdEdRe_TextF_Discount.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_AdEdRe_TextF_Discount.setToolTipText("Discount");
        CustStage_AdEdRe_TextF_Discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CustStage_AdEdRe_TextF_DiscountKeyTyped(evt);
            }
        });

        AddCustStage_Scp_1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        AddCustStage_Scp_1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        CustStage_AdEdRe_TextA_Discription.setColumns(20);
        CustStage_AdEdRe_TextA_Discription.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_AdEdRe_TextA_Discription.setLineWrap(true);
        CustStage_AdEdRe_TextA_Discription.setRows(5);
        CustStage_AdEdRe_TextA_Discription.setToolTipText("Discription");
        CustStage_AdEdRe_TextA_Discription.setWrapStyleWord(true);
        AddCustStage_Scp_1.setViewportView(CustStage_AdEdRe_TextA_Discription);

        CustStage_AdEdRe_Label_CustStageID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Label_CustStageID.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Label_CustStageID.setText("Customer Stage ID : ");

        CustStage_AdEdRe_Label_CustStageName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Label_CustStageName.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Label_CustStageName.setText("Stage Name : ");

        CustStage_AdEdRe_Label_ActTimFrom.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Label_ActTimFrom.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Label_ActTimFrom.setText("Active From (Month) : ");

        CustStage_AdEdRe_Label_Discount.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Label_Discount.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Label_Discount.setText("Discount (%) : ");

        CustStage_AdEdRe_Label_ActTimTo.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Label_ActTimTo.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Label_ActTimTo.setText("Active To (Month) : ");

        CustStage_AdEdRe_Label_Discription.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Label_Discription.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Label_Discription.setText("Discription : ");

        Cust_AdEdReCust_Btn_AddCust.setBackground(new java.awt.Color(204, 204, 204));
        Cust_AdEdReCust_Btn_AddCust.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Cust_AdEdReCust_Btn_AddCust.setForeground(new java.awt.Color(51, 51, 51));
        Cust_AdEdReCust_Btn_AddCust.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/Add_plus.png"))); // NOI18N
        Cust_AdEdReCust_Btn_AddCust.setText("Add");
        Cust_AdEdReCust_Btn_AddCust.setToolTipText("Add Customer Stage");
        Cust_AdEdReCust_Btn_AddCust.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cust_AdEdReCust_Btn_AddCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cust_AdEdReCust_Btn_AddCustActionPerformed(evt);
            }
        });

        Cust_AdEdReCust_Btn_EditCust.setBackground(new java.awt.Color(204, 204, 204));
        Cust_AdEdReCust_Btn_EditCust.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Cust_AdEdReCust_Btn_EditCust.setForeground(new java.awt.Color(51, 51, 51));
        Cust_AdEdReCust_Btn_EditCust.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/Edit_pencil.png"))); // NOI18N
        Cust_AdEdReCust_Btn_EditCust.setText("Edit");
        Cust_AdEdReCust_Btn_EditCust.setToolTipText("Edit Customer Stage");
        Cust_AdEdReCust_Btn_EditCust.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cust_AdEdReCust_Btn_EditCust.setEnabled(false);
        Cust_AdEdReCust_Btn_EditCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cust_AdEdReCust_Btn_EditCustActionPerformed(evt);
            }
        });

        Cust_AdEdReCust_Btn_RemoveCust.setBackground(new java.awt.Color(204, 204, 204));
        Cust_AdEdReCust_Btn_RemoveCust.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Cust_AdEdReCust_Btn_RemoveCust.setForeground(new java.awt.Color(51, 51, 51));
        Cust_AdEdReCust_Btn_RemoveCust.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/trash_bin.png"))); // NOI18N
        Cust_AdEdReCust_Btn_RemoveCust.setText("Remove");
        Cust_AdEdReCust_Btn_RemoveCust.setToolTipText("Remove Customer Stage");
        Cust_AdEdReCust_Btn_RemoveCust.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cust_AdEdReCust_Btn_RemoveCust.setEnabled(false);
        Cust_AdEdReCust_Btn_RemoveCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cust_AdEdReCust_Btn_RemoveCustActionPerformed(evt);
            }
        });

        CustStage_AdEdRe_Table_CustStage.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        CustStage_AdEdRe_Table_CustStage.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Table_CustStage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Stage ID", "Stage Name", "Active From (Month)", "Active To (Month)", "Discount", "Discription"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CustStage_AdEdRe_Table_CustStage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustStage_AdEdRe_Table_CustStage.setGridColor(new java.awt.Color(102, 102, 102));
        CustStage_AdEdRe_Table_CustStage.setIntercellSpacing(new java.awt.Dimension(1, 0));
        CustStage_AdEdRe_Table_CustStage.setRowHeight(17);
        CustStage_AdEdRe_Table_CustStage.setSelectionBackground(new java.awt.Color(46, 141, 216));
        CustStage_AdEdRe_Table_CustStage.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CustStage_Scp_2.setViewportView(CustStage_AdEdRe_Table_CustStage);

        CustStage_AdEdRe_Btn_RemoveAdded.setBackground(new java.awt.Color(204, 204, 204));
        CustStage_AdEdRe_Btn_RemoveAdded.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Btn_RemoveAdded.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Btn_RemoveAdded.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/trash_bin.png"))); // NOI18N
        CustStage_AdEdRe_Btn_RemoveAdded.setText("Remove");
        CustStage_AdEdRe_Btn_RemoveAdded.setToolTipText("Remove Edit");
        CustStage_AdEdRe_Btn_RemoveAdded.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustStage_AdEdRe_Btn_RemoveAdded.setEnabled(false);
        CustStage_AdEdRe_Btn_RemoveAdded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustStage_AdEdRe_Btn_RemoveAddedActionPerformed(evt);
            }
        });

        CustStage_AdEdRe_Btn_AddAll.setBackground(new java.awt.Color(204, 204, 204));
        CustStage_AdEdRe_Btn_AddAll.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        CustStage_AdEdRe_Btn_AddAll.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_AdEdRe_Btn_AddAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/check.png"))); // NOI18N
        CustStage_AdEdRe_Btn_AddAll.setText("Add All");
        CustStage_AdEdRe_Btn_AddAll.setToolTipText("Update");
        CustStage_AdEdRe_Btn_AddAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustStage_AdEdRe_Btn_AddAll.setEnabled(false);
        CustStage_AdEdRe_Btn_AddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustStage_AdEdRe_Btn_AddAllActionPerformed(evt);
            }
        });

        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_TextF_CustStageID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_TextF_CustStageName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_TextF_ActTimFrom, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_TextF_ActTimTo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_TextF_Discount, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(AddCustStage_Scp_1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Label_CustStageID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Label_CustStageName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Label_ActTimFrom, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Label_Discount, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Label_ActTimTo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Label_Discription, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(Cust_AdEdReCust_Btn_AddCust, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(Cust_AdEdReCust_Btn_EditCust, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(Cust_AdEdReCust_Btn_RemoveCust, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_Scp_2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Btn_RemoveAdded, javax.swing.JLayeredPane.DEFAULT_LAYER);
        CustStage_LPane_AdEdReCustStage.setLayer(CustStage_AdEdRe_Btn_AddAll, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout CustStage_LPane_AdEdReCustStageLayout = new javax.swing.GroupLayout(CustStage_LPane_AdEdReCustStage);
        CustStage_LPane_AdEdReCustStage.setLayout(CustStage_LPane_AdEdReCustStageLayout);
        CustStage_LPane_AdEdReCustStageLayout.setHorizontalGroup(
            CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustStage_LPane_AdEdReCustStageLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CustStage_AdEdRe_Label_CustStageName)
                    .addComponent(CustStage_AdEdRe_Label_ActTimFrom)
                    .addComponent(CustStage_AdEdRe_Label_CustStageID)
                    .addComponent(CustStage_AdEdRe_Label_ActTimTo)
                    .addComponent(CustStage_AdEdRe_Label_Discount)
                    .addComponent(CustStage_AdEdRe_Label_Discription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(CustStage_LPane_AdEdReCustStageLayout.createSequentialGroup()
                        .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CustStage_AdEdRe_TextF_Discount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(CustStage_AdEdRe_TextF_ActTimTo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustStage_AdEdRe_TextF_ActTimFrom, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustStage_AdEdRe_TextF_CustStageName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustStage_AdEdRe_TextF_CustStageID, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(5, 5, 5)
                        .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Cust_AdEdReCust_Btn_AddCust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cust_AdEdReCust_Btn_EditCust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cust_AdEdReCust_Btn_RemoveCust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(AddCustStage_Scp_1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CustStage_Scp_2, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CustStage_AdEdRe_Btn_AddAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CustStage_AdEdRe_Btn_RemoveAdded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        CustStage_LPane_AdEdReCustStageLayout.setVerticalGroup(
            CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustStage_LPane_AdEdReCustStageLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CustStage_LPane_AdEdReCustStageLayout.createSequentialGroup()
                        .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustStage_AdEdRe_Label_CustStageID)
                            .addComponent(CustStage_AdEdRe_TextF_CustStageID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustStage_AdEdRe_Label_CustStageName)
                            .addComponent(CustStage_AdEdRe_TextF_CustStageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustStage_AdEdRe_TextF_ActTimFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustStage_AdEdRe_Label_ActTimFrom))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustStage_AdEdRe_TextF_ActTimTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustStage_AdEdRe_Label_ActTimTo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustStage_AdEdRe_TextF_Discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustStage_AdEdRe_Label_Discount)))
                    .addGroup(CustStage_LPane_AdEdReCustStageLayout.createSequentialGroup()
                        .addComponent(Cust_AdEdReCust_Btn_AddCust, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cust_AdEdReCust_Btn_EditCust, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cust_AdEdReCust_Btn_RemoveCust, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CustStage_LPane_AdEdReCustStageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CustStage_AdEdRe_Label_Discription)
                    .addComponent(AddCustStage_Scp_1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustStage_LPane_AdEdReCustStageLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(CustStage_AdEdRe_Btn_RemoveAdded)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CustStage_AdEdRe_Btn_AddAll, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(CustStage_LPane_AdEdReCustStageLayout.createSequentialGroup()
                .addComponent(CustStage_Scp_2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        CustStage_Btn_Ok.setBackground(new java.awt.Color(204, 204, 204));
        CustStage_Btn_Ok.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        CustStage_Btn_Ok.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_Btn_Ok.setText("Ok");
        CustStage_Btn_Ok.setToolTipText("Ok");
        CustStage_Btn_Ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustStage_Btn_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustStage_Btn_OkActionPerformed(evt);
            }
        });

        CustStage_Btn_Back.setBackground(new java.awt.Color(204, 204, 204));
        CustStage_Btn_Back.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        CustStage_Btn_Back.setForeground(new java.awt.Color(51, 51, 51));
        CustStage_Btn_Back.setText("Back");
        CustStage_Btn_Back.setToolTipText("Back");
        CustStage_Btn_Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustStage_Btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustStage_Btn_BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustStage_LPane_SearchCustStage, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE)
                            .addComponent(CustStage_LPane_AdEdReCustStage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(CustStage_Btn_Back)
                                .addGap(6, 6, 6)
                                .addComponent(CustStage_Btn_Ok)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(CustStage_Label_Heading)
                                .addGap(443, 443, 443))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CustStage_Label_Heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CustStage_LPane_SearchCustStage, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CustStage_LPane_AdEdReCustStage, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CustStage_Btn_Back)
                    .addComponent(CustStage_Btn_Ok))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CustStage_Search_Btn_ShowAllCustStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustStage_Search_Btn_ShowAllCustStageActionPerformed
        Clear();
        CustStage_Search_TextF_CustStageID.setText("");
        CustStage_Search_TextF_CustStageName.setText("");
        try {
            DefaultTableModel List_SearchT = (DefaultTableModel) CustStage_Search_Table_CustStage.getModel();
            List_SearchT.setRowCount(0);
            ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM cust_stages");
            while (res.next()) {
                byte status = Byte.parseByte(res.getString("Cust_Stg_Status"));
                if (status == 1) {
                    Vector v = new Vector();
                    v.addElement(res.getString("Cust_Stg_ID"));
                    v.addElement(res.getString("Cust_Stg_Name"));
                    v.addElement(res.getString("Cust_Stg_ActTimeFrom"));
                    v.addElement(res.getString("Cust_Stg_ActTimeTo"));
                    v.addElement(res.getString("Cust_Stg_Discount"));
                    v.addElement(res.getString("Cust_Stg_Discription"));
                    List_SearchT.addRow(v);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        Cust_AdEdReCust_Btn_EditCust.setEnabled(false);
        Cust_AdEdReCust_Btn_RemoveCust.setEnabled(false);
    }//GEN-LAST:event_CustStage_Search_Btn_ShowAllCustStageActionPerformed

    private void Cust_AdEdReCust_Btn_EditCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cust_AdEdReCust_Btn_EditCustActionPerformed
        if (!((CustStage_AdEdRe_TextF_CustStageID.getText().equals("")) || (CustStage_AdEdRe_TextF_CustStageID.getText() == null))) {
            if (!((CustStage_AdEdRe_TextF_CustStageName.getText().equals("")) || (CustStage_AdEdRe_TextF_CustStageName.getText() == null))) {
                int u = JOptionPane.showConfirmDialog(this, "Do you want to update this Record ?", "Are You Sure ?", 0, 3);
                if (u == 0) {
                    Update_Query();
                    Refresh();
                }
                Cust_AdEdReCust_Btn_EditCust.setEnabled(false);
                Cust_AdEdReCust_Btn_RemoveCust.setEnabled(false);
                CustStage_Search_Table_CustStage.setRowSelectionAllowed(false);
                Clear();
                Clear();
            } else {
                JOptionPane.showMessageDialog(this, "Customer Stage type name field is empty", "Error", 0);
            }
        }
    }//GEN-LAST:event_Cust_AdEdReCust_Btn_EditCustActionPerformed

    private void Cust_AdEdReCust_Btn_RemoveCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cust_AdEdReCust_Btn_RemoveCustActionPerformed
        if (!((CustStage_AdEdRe_TextF_CustStageID.getText().equals("")) || (CustStage_AdEdRe_TextF_CustStageID.getText() == null))) {
            int d = JOptionPane.showConfirmDialog(this, "Do you want to delete this record ?", "Are You Sure ?", 0, 3);
            if (d == 0) {
                Delete();
                Refresh();
            }
        }
        Cust_AdEdReCust_Btn_EditCust.setEnabled(false);
        Cust_AdEdReCust_Btn_RemoveCust.setEnabled(false);
        CustStage_Search_Table_CustStage.setRowSelectionAllowed(false);
        Clear();
    }//GEN-LAST:event_Cust_AdEdReCust_Btn_RemoveCustActionPerformed

    private void CustStage_AdEdRe_Btn_RemoveAddedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustStage_AdEdRe_Btn_RemoveAddedActionPerformed
        DefaultTableModel AdEdReTblModel = (DefaultTableModel) CustStage_AdEdRe_Table_CustStage.getModel();
        int[] indexes = CustStage_AdEdRe_Table_CustStage.getSelectedRows();
        int res = 0;
        for (int i = 0; i < indexes.length; i++) {
            res += (i > 0) ? (indexes[i] - indexes[i - 1] - 1) : 0;
            int index = CustStage_AdEdRe_Table_CustStage.convertColumnIndexToModel(indexes[0] + res);
            AdEdReTblModel.removeRow(index);
        }
        if (AdEdReTblModel.getRowCount() == 0) {
            CustStage_AdEdRe_Btn_RemoveAdded.setEnabled(false);
            CustStage_AdEdRe_Btn_AddAll.setEnabled(false);
        }
    }//GEN-LAST:event_CustStage_AdEdRe_Btn_RemoveAddedActionPerformed

    private void CustStage_AdEdRe_Btn_AddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustStage_AdEdRe_Btn_AddAllActionPerformed
        DefaultTableModel AdEdReTblModel = (DefaultTableModel) CustStage_AdEdRe_Table_CustStage.getModel();
        try {
            int i = 0;
            //System.out.println(AdEdReTblModel.getRowCount());
            while (i < AdEdReTblModel.getRowCount()) {
                ConnectDB.DBConnection().createStatement().executeUpdate("INSERT INTO cust_stages VALUES('" + AdEdReTblModel.getValueAt(i, 0) + "','" + AdEdReTblModel.getValueAt(i, 1) + "','" + AdEdReTblModel.getValueAt(i, 2) + "','" + AdEdReTblModel.getValueAt(i, 3) + "','" + AdEdReTblModel.getValueAt(i, 4) + "','" + AdEdReTblModel.getValueAt(i, 5) + "','" + 1 + "')");
                i++;
            }
            JOptionPane.showMessageDialog(this, "Records added succesfully");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        Refresh();
        a = 0;
        ID = 1;
        AdEdReTblModel.setRowCount(0);
        if (AdEdReTblModel.getRowCount() == 0) {
            CustStage_AdEdRe_Btn_RemoveAdded.setEnabled(false);
            CustStage_AdEdRe_Btn_AddAll.setEnabled(false);
        }
    }//GEN-LAST:event_CustStage_AdEdRe_Btn_AddAllActionPerformed

    private void CustStage_Btn_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustStage_Btn_OkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustStage_Btn_OkActionPerformed

    private void CustStage_Btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustStage_Btn_BackActionPerformed
        // TODSup_Label_Headingcode here:
    }//GEN-LAST:event_CustStage_Btn_BackActionPerformed
    private int a = 0;
    private int b = 0;
    private int clear = 0;
    private int ID = 1;
    private void Cust_AdEdReCust_Btn_AddCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cust_AdEdReCust_Btn_AddCustActionPerformed
        CustStage_Search_Table_CustStage.setRowSelectionAllowed(false);
        try {
            DefaultTableModel AdEdReTblModel = (DefaultTableModel) CustStage_AdEdRe_Table_CustStage.getModel();
            ResultSet res_1 = ConnectDB.DBConnection().createStatement().executeQuery("SELECT Cust_Stg_ID FROM cust_stages");
            if (!res_1.next()) {// if no records in table
                if (b == 0) {// first record
                    CustStage_AdEdRe_TextF_CustStageID.setText("" + ID);
                    b = 1;
                } else if (b == 1) {//next records
                    if (!((CustStage_AdEdRe_TextF_CustStageName.getText().equals("")) || (CustStage_AdEdRe_TextF_CustStageName.getText() == null))) {
                        Vector v = new Vector();// Add to AdEdRe Table
                        v.addElement(CustStage_AdEdRe_TextF_CustStageID.getText());
                        v.addElement(CustStage_AdEdRe_TextF_CustStageName.getText());
                        v.addElement(CustStage_AdEdRe_TextF_ActTimFrom.getText());
                        v.addElement(CustStage_AdEdRe_TextF_ActTimTo.getText());
                        v.addElement(CustStage_AdEdRe_TextF_Discount.getText());
                        v.addElement(CustStage_AdEdRe_TextA_Discription.getText());
                        AdEdReTblModel.addRow(v);
                        ID++;// ID increment
                        Clear();
                        CustStage_AdEdRe_TextF_CustStageID.setText("" + ID);
                    } else {//if bill type name field empty
                        JOptionPane.showMessageDialog(this, "Customer stage type name field is empty", "Error", 0);
                    }
                }
            } else {//if table filled with data
                if (a == 0) {// check text fields not empty // for the first set of data to table
                    if (clear == 0) { //// clear text fields data from search table
                        Clear();
                        clear = 1;
                    }
                    if (AdEdReTblModel.getRowCount() == 0) {
                        res_1.last();// get last ID no
                        ID = Integer.parseInt(res_1.getString("Cust_Stg_ID"));
                        ID++;// ID increment
                        //System.out.println(ID);
                        CustStage_AdEdRe_TextF_CustStageID.setText("" + ID);
                    } else {
                        ID = Integer.parseInt((String) AdEdReTblModel.getValueAt(AdEdReTblModel.getRowCount() - 1, 0));// get ID last ID no in AdEdRe Table
                        ID++;//ID increment
                        CustStage_AdEdRe_TextF_CustStageID.setText("" + ID);
                    }
                    a = 1;
                } else if (a == 1) {// if first data set added to db
                    if (!((CustStage_AdEdRe_TextF_CustStageName.getText().equals("")) || (CustStage_AdEdRe_TextF_CustStageName.getText() == null))) {
                        Vector v = new Vector();
                        v.addElement(CustStage_AdEdRe_TextF_CustStageID.getText());
                        v.addElement(CustStage_AdEdRe_TextF_CustStageName.getText());
                        v.addElement(CustStage_AdEdRe_TextF_ActTimFrom.getText());
                        v.addElement(CustStage_AdEdRe_TextF_ActTimTo.getText());
                        v.addElement(CustStage_AdEdRe_TextF_Discount.getText());
                        v.addElement(CustStage_AdEdRe_TextA_Discription.getText());
                        AdEdReTblModel.addRow(v);
                        ID++;
                        Clear();
                        CustStage_AdEdRe_TextF_CustStageID.setText("" + ID);
                    } else {
                        JOptionPane.showMessageDialog(this, "Customer stage type name field is empty", "Error", 0);
                    }
                }
            }
            clear = 2;
            ////////////////////////////////////////////////////////////////////////////////////////////////////////
            if (AdEdReTblModel.getRowCount() > 0) {
                CustStage_AdEdRe_Btn_RemoveAdded.setEnabled(true);
                CustStage_AdEdRe_Btn_AddAll.setEnabled(true);
            }
            Cust_AdEdReCust_Btn_EditCust.setEnabled(false);
            Cust_AdEdReCust_Btn_RemoveCust.setEnabled(false);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Cust_AdEdReCust_Btn_AddCustActionPerformed

    private void CustStage_Search_TextF_CustStageIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustStage_Search_TextF_CustStageIDKeyReleased
        CustStage_Search_TextF_CustStageName.setText("");
        DefaultTableModel List_SearchT = (DefaultTableModel) CustStage_Search_Table_CustStage.getModel();
        try {
            if (!(CustStage_Search_TextF_CustStageID.getText().equals("")) || CustStage_Search_TextF_CustStageID.getText() == null) {
                List_SearchT.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM cust_stages WHERE Cust_Stg_ID LIKE'" + CustStage_Search_TextF_CustStageID.getText() + "%'");
                while (res.next()) {
                    byte status = Byte.parseByte(res.getString("Cust_Stg_Status"));
                    if (status == 1) {
                        Vector v = new Vector();
                        v.addElement(res.getString("Cust_Stg_ID"));
                        v.addElement(res.getString("Cust_Stg_Name"));
                        v.addElement(res.getString("Cust_Stg_ActTimeFrom"));
                        v.addElement(res.getString("Cust_Stg_ActTimeTo"));
                        v.addElement(res.getString("Cust_Stg_Discount"));
                        v.addElement(res.getString("Cust_Stg_Discription"));
                        List_SearchT.addRow(v);
                    }
                }
            }
            Clear();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        Cust_AdEdReCust_Btn_EditCust.setEnabled(false);
        Cust_AdEdReCust_Btn_RemoveCust.setEnabled(false);
    }//GEN-LAST:event_CustStage_Search_TextF_CustStageIDKeyReleased

    private void CustStage_Search_TextF_CustStageNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustStage_Search_TextF_CustStageNameKeyReleased
        CustStage_Search_TextF_CustStageID.setText("");
        DefaultTableModel List_SearchT = (DefaultTableModel) CustStage_Search_Table_CustStage.getModel();
        try {
            if (!(CustStage_Search_TextF_CustStageName.getText().equals("")) || CustStage_Search_TextF_CustStageName.getText() == null) {
                List_SearchT.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM cust_stages WHERE Cust_Stg_Name LIKE'" + CustStage_Search_TextF_CustStageName.getText() + "%'");
                while (res.next()) {
                    byte status = Byte.parseByte(res.getString("Cust_Stg_Status"));
                    if (status == 1) {
                        Vector v = new Vector();
                        v.addElement(res.getString("Cust_Stg_ID"));
                        v.addElement(res.getString("Cust_Stg_Name"));
                        v.addElement(res.getString("Cust_Stg_ActTimeFrom"));
                        v.addElement(res.getString("Cust_Stg_ActTimeTo"));
                        v.addElement(res.getString("Cust_Stg_Discount"));
                        v.addElement(res.getString("Cust_Stg_Discription"));
                        List_SearchT.addRow(v);
                    }
                }
            }
            Clear();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        a = 0;
        Cust_AdEdReCust_Btn_EditCust.setEnabled(false);
        Cust_AdEdReCust_Btn_RemoveCust.setEnabled(false);
    }//GEN-LAST:event_CustStage_Search_TextF_CustStageNameKeyReleased

    private void CustStage_Search_TextF_CustStageIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustStage_Search_TextF_CustStageIDKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_CustStage_Search_TextF_CustStageIDKeyTyped

    private void CustStage_AdEdRe_TextF_ActTimFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustStage_AdEdRe_TextF_ActTimFromKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if ((Character.getType(evt.getKeyChar()) == 15) && !"BACKSPACE".equals(Character.getName(evt.getKeyChar()))) {
            CustStage_AdEdRe_TextF_ActTimTo.grabFocus();
        }
    }//GEN-LAST:event_CustStage_AdEdRe_TextF_ActTimFromKeyTyped

    private void CustStage_AdEdRe_TextF_ActTimToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustStage_AdEdRe_TextF_ActTimToKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if ((Character.getType(evt.getKeyChar()) == 15) && !"BACKSPACE".equals(Character.getName(evt.getKeyChar()))) {
            CustStage_AdEdRe_TextF_Discount.grabFocus();
        }
    }//GEN-LAST:event_CustStage_AdEdRe_TextF_ActTimToKeyTyped

    private void CustStage_AdEdRe_TextF_DiscountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustStage_AdEdRe_TextF_DiscountKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        if(CustStage_AdEdRe_TextF_Discount.getText().length()>=2){
            evt.consume();
        }
        if ((Character.getType(evt.getKeyChar()) == 15) && !"BACKSPACE".equals(Character.getName(evt.getKeyChar()))) {
            CustStage_AdEdRe_TextA_Discription.grabFocus();
        }
    }//GEN-LAST:event_CustStage_AdEdRe_TextF_DiscountKeyTyped

    private void CustStage_AdEdRe_TextF_CustStageNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustStage_AdEdRe_TextF_CustStageNameKeyTyped
        if ((Character.getType(evt.getKeyChar()) == 15) && !"BACKSPACE".equals(Character.getName(evt.getKeyChar()))) {
            CustStage_AdEdRe_TextF_ActTimFrom.grabFocus();
        }
    }//GEN-LAST:event_CustStage_AdEdRe_TextF_CustStageNameKeyTyped

    private void CustStage_Search_Table_CustStageMouseClicked(java.awt.event.MouseEvent evt) {
        CustStage_Search_Table_CustStage.setRowSelectionAllowed(true);
        try {
            ResultSet List_ToAdEdRe = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM cust_stages WHERE Cust_Stg_ID='" + (String) CustStage_Search_Table_CustStage.getValueAt(CustStage_Search_Table_CustStage.getSelectedRow(), 0) + "'");
            while (List_ToAdEdRe.next()) {
                CustStage_AdEdRe_TextF_CustStageID.setText(List_ToAdEdRe.getString("Cust_Stg_ID"));
                CustStage_AdEdRe_TextF_CustStageName.setText(List_ToAdEdRe.getString("Cust_Stg_Name"));
                CustStage_AdEdRe_TextF_ActTimFrom.setText(List_ToAdEdRe.getString("Cust_Stg_ActTimeFrom"));
                CustStage_AdEdRe_TextF_ActTimTo.setText(List_ToAdEdRe.getString("Cust_Stg_ActTimeTo"));
                CustStage_AdEdRe_TextF_Discount.setText(List_ToAdEdRe.getString("Cust_Stg_Discount"));
                CustStage_AdEdRe_TextA_Discription.setText(List_ToAdEdRe.getString("Cust_Stg_Discription"));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        Cust_AdEdReCust_Btn_EditCust.setEnabled(true);
        Cust_AdEdReCust_Btn_RemoveCust.setEnabled(true);
        clear = 0;
        a = 0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane AddCustStage_Scp_1;
    private javax.swing.JButton CustStage_AdEdRe_Btn_AddAll;
    private javax.swing.JButton CustStage_AdEdRe_Btn_RemoveAdded;
    private javax.swing.JLabel CustStage_AdEdRe_Label_ActTimFrom;
    private javax.swing.JLabel CustStage_AdEdRe_Label_ActTimTo;
    private javax.swing.JLabel CustStage_AdEdRe_Label_CustStageID;
    private javax.swing.JLabel CustStage_AdEdRe_Label_CustStageName;
    private javax.swing.JLabel CustStage_AdEdRe_Label_Discount;
    private javax.swing.JLabel CustStage_AdEdRe_Label_Discription;
    private javax.swing.JTable CustStage_AdEdRe_Table_CustStage;
    private javax.swing.JTextArea CustStage_AdEdRe_TextA_Discription;
    private javax.swing.JTextField CustStage_AdEdRe_TextF_ActTimFrom;
    private javax.swing.JTextField CustStage_AdEdRe_TextF_ActTimTo;
    private javax.swing.JTextField CustStage_AdEdRe_TextF_CustStageID;
    private javax.swing.JTextField CustStage_AdEdRe_TextF_CustStageName;
    private javax.swing.JTextField CustStage_AdEdRe_TextF_Discount;
    private javax.swing.JButton CustStage_Btn_Back;
    private javax.swing.JButton CustStage_Btn_Ok;
    private javax.swing.JLayeredPane CustStage_LPane_AdEdReCustStage;
    private javax.swing.JLayeredPane CustStage_LPane_SearchCustStage;
    private javax.swing.JLabel CustStage_Label_Heading;
    private javax.swing.JScrollPane CustStage_Scp_1;
    private javax.swing.JScrollPane CustStage_Scp_2;
    private javax.swing.JButton CustStage_Search_Btn_ShowAllCustStage;
    private javax.swing.JLabel CustStage_Search_Label_CustStageID;
    private javax.swing.JLabel CustStage_Search_Label_CustStageName;
    private javax.swing.JTable CustStage_Search_Table_CustStage;
    private javax.swing.JTextField CustStage_Search_TextF_CustStageID;
    private javax.swing.JTextField CustStage_Search_TextF_CustStageName;
    private javax.swing.JButton Cust_AdEdReCust_Btn_AddCust;
    private javax.swing.JButton Cust_AdEdReCust_Btn_EditCust;
    private javax.swing.JButton Cust_AdEdReCust_Btn_RemoveCust;
    // End of variables declaration//GEN-END:variables

    private void Clear() {
        CustStage_AdEdRe_TextF_CustStageID.setText("");
        CustStage_AdEdRe_TextF_CustStageName.setText("");
        CustStage_AdEdRe_TextF_ActTimFrom.setText("");
        CustStage_AdEdRe_TextF_ActTimTo.setText("");
        CustStage_AdEdRe_TextF_Discount.setText("");
        CustStage_AdEdRe_TextA_Discription.setText("");
    }

    private void Update_Query() {
        try {
            ConnectDB.DBConnection().createStatement().executeUpdate("UPDATE cust_stages SET Cust_Stg_Name='" + CustStage_AdEdRe_TextF_CustStageName.getText() + "',Cust_Stg_ActTimeFrom='" + CustStage_AdEdRe_TextF_ActTimFrom.getText() + "',Cust_Stg_ActTimeTo='" + CustStage_AdEdRe_TextF_ActTimTo.getText() + "',Cust_Stg_Discount='" + CustStage_AdEdRe_TextF_Discount.getText() + "',Cust_Stg_Discription='" + CustStage_AdEdRe_TextA_Discription.getText() + "'WHERE Cust_Stg_ID='" + CustStage_AdEdRe_TextF_CustStageID.getText() + "'");
            JOptionPane.showMessageDialog(this, "Record edited successfully.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error\nTry Again..!", "Error", 0);
        }
    }

    private void Delete() {
        try {
            ConnectDB.DBConnection().createStatement().executeUpdate("UPDATE cust_stages SET Cust_Stg_Status='" + 0 + "' WHERE Cust_Stg_ID='" + CustStage_AdEdRe_TextF_CustStageID.getText() + "'");
            JOptionPane.showMessageDialog(this, "Record is deleted successfully.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error\nTry Again..!", "Error", 0);
        }
    }

    private void Refresh() {
        DefaultTableModel List_BType = (DefaultTableModel) CustStage_Search_Table_CustStage.getModel();
        if (List_BType.getRowCount() > 0) {
            if (!CustStage_Search_TextF_CustStageID.getText().equals("")) {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM cust_stages WHERE Cust_Stg_ID LIKE'" + CustStage_Search_TextF_CustStageID.getText() + "%'");
                    while (res.next()) {
                        byte status = Byte.parseByte(res.getString("Cust_Stg_Status"));
                        if (status == 1) {
                            Vector v = new Vector();
                            v.addElement(res.getString("Cust_Stg_ID"));
                            v.addElement(res.getString("Cust_Stg_Name"));
                            v.addElement(res.getString("Cust_Stg_ActTimeFrom"));
                            v.addElement(res.getString("Cust_Stg_ActTimeTo"));
                            v.addElement(res.getString("Cust_Stg_Discount"));
                            v.addElement(res.getString("Cust_Stg_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else if (!CustStage_Search_TextF_CustStageName.getText().equals("")) {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM cust_stages WHERE Cust_Stg_Name LIKE'" + CustStage_Search_TextF_CustStageName.getText() + "%'");
                    while (res.next()) {
                        byte status = Byte.parseByte(res.getString("Cust_Stg_Status"));
                        if (status == 1) {
                            Vector v = new Vector();
                            v.addElement(res.getString("Cust_Stg_ID"));
                            v.addElement(res.getString("Cust_Stg_Name"));
                            v.addElement(res.getString("Cust_Stg_ActTimeFrom"));
                            v.addElement(res.getString("Cust_Stg_ActTimeTo"));
                            v.addElement(res.getString("Cust_Stg_Discount"));
                            v.addElement(res.getString("Cust_Stg_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                try {
                    List_BType.setRowCount(0);
                    ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM cust_stages");
                    while (res.next()) {
                        byte status = Byte.parseByte(res.getString("Cust_Stg_Status"));
                        if (status == 1) {
                            Vector v = new Vector();
                            v.addElement(res.getString("Cust_Stg_ID"));
                            v.addElement(res.getString("Cust_Stg_Name"));
                            v.addElement(res.getString("Cust_Stg_ActTimeFrom"));
                            v.addElement(res.getString("Cust_Stg_ActTimeTo"));
                            v.addElement(res.getString("Cust_Stg_Discount"));
                            v.addElement(res.getString("Cust_Stg_Discription"));
                            List_BType.addRow(v);
                        }
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
}
