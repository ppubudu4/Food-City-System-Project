/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import ConnectDB.ConnectDB;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;


public class Emp extends javax.swing.JPanel {

    /**
     * Creates new form Emp
     */
    public Emp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Emp_Btn_ShowAllEmp = new javax.swing.JButton();
        Emp_Scp_1 = new javax.swing.JScrollPane();
        Emp_Table_Emp = new javax.swing.JTable();
        Emp_Btn_Back = new javax.swing.JButton();
        Emp_Btn_Ok = new javax.swing.JButton();
        Emp_Label_Heading = new javax.swing.JLabel();
        Emp_Label_EmpID = new javax.swing.JLabel();
        Emp_Label_EmpName = new javax.swing.JLabel();
        Emp_Btn_Search = new javax.swing.JButton();
        Emp_TextF_EmpName = new javax.swing.JTextField();
        Emp_TextF_EmpID = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        Emp_Btn_ShowAllEmp.setBackground(new java.awt.Color(204, 204, 204));
        Emp_Btn_ShowAllEmp.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Emp_Btn_ShowAllEmp.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Btn_ShowAllEmp.setText("Show All Employees");
        Emp_Btn_ShowAllEmp.setToolTipText("Show All Employees");
        Emp_Btn_ShowAllEmp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Emp_Btn_ShowAllEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Emp_Btn_ShowAllEmpActionPerformed(evt);
            }
        });

        Emp_Table_Emp.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Emp_Table_Emp.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Table_Emp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "Address 1", "Address 2", "Date of Birth", "Contact No", "E-mail", "Gender", "Position", "Joined Date", "Leave Date", "Access Level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Emp_Table_Emp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Emp_Table_Emp.setGridColor(new java.awt.Color(102, 102, 102));
        Emp_Table_Emp.setIntercellSpacing(new java.awt.Dimension(1, 0));
        Emp_Table_Emp.setRowHeight(17);
        Emp_Table_Emp.setSelectionBackground(new java.awt.Color(46, 141, 216));
        Emp_Table_Emp.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Emp_Scp_1.setViewportView(Emp_Table_Emp);

        Emp_Btn_Back.setBackground(new java.awt.Color(204, 204, 204));
        Emp_Btn_Back.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Emp_Btn_Back.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Btn_Back.setText("Back");
        Emp_Btn_Back.setToolTipText("Back");
        Emp_Btn_Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Emp_Btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Emp_Btn_BackActionPerformed(evt);
            }
        });

        Emp_Btn_Ok.setBackground(new java.awt.Color(204, 204, 204));
        Emp_Btn_Ok.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Emp_Btn_Ok.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Btn_Ok.setText("Ok");
        Emp_Btn_Ok.setToolTipText("Ok");
        Emp_Btn_Ok.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Emp_Btn_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Emp_Btn_OkActionPerformed(evt);
            }
        });

        Emp_Label_Heading.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        Emp_Label_Heading.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Label_Heading.setText("Employee");

        Emp_Label_EmpID.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Emp_Label_EmpID.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Label_EmpID.setText("Employee ID : ");

        Emp_Label_EmpName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Emp_Label_EmpName.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Label_EmpName.setText("Employee Name : ");

        Emp_Btn_Search.setBackground(new java.awt.Color(204, 204, 204));
        Emp_Btn_Search.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Emp_Btn_Search.setForeground(new java.awt.Color(51, 51, 51));
        Emp_Btn_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Btn_icon/search (2).png"))); // NOI18N
        Emp_Btn_Search.setText("Search");
        Emp_Btn_Search.setToolTipText("Search");
        Emp_Btn_Search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Emp_Btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Emp_Btn_SearchActionPerformed(evt);
            }
        });

        Emp_TextF_EmpName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Emp_TextF_EmpName.setToolTipText("Employee First Name or Last Name");
        Emp_TextF_EmpName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Emp_TextF_EmpNameKeyReleased(evt);
            }
        });

        Emp_TextF_EmpID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Emp_TextF_EmpID.setToolTipText("Employee First Name or Last Name");
        Emp_TextF_EmpID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Emp_TextF_EmpIDKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Emp_Scp_1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Emp_Btn_Back)
                        .addGap(6, 6, 6)
                        .addComponent(Emp_Btn_Ok))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(Emp_Label_EmpID)
                        .addGap(1, 1, 1)
                        .addComponent(Emp_TextF_EmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Emp_Label_EmpName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Emp_Label_Heading)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Emp_TextF_EmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(Emp_Btn_Search)
                                .addGap(55, 55, 55)
                                .addComponent(Emp_Btn_ShowAllEmp)))
                        .addGap(0, 45, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(Emp_Label_Heading)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Emp_Label_EmpName)
                    .addComponent(Emp_Label_EmpID)
                    .addComponent(Emp_Btn_ShowAllEmp)
                    .addComponent(Emp_Btn_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Emp_TextF_EmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Emp_TextF_EmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(Emp_Scp_1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Emp_Btn_Back)
                    .addComponent(Emp_Btn_Ok))
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Emp_Btn_ShowAllEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Emp_Btn_ShowAllEmpActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) Emp_Table_Emp.getModel();
            model.setRowCount(0);
            ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM employee");
            while (res.next()) {
                Vector v = new Vector();
                v.addElement(res.getString("Emp_ID"));
                v.addElement(res.getString("Emp_FName"));
                v.addElement(res.getString("Emp_LName"));
                v.addElement(res.getString("Emp_Address_1"));
                v.addElement(res.getString("Emp_Address_2"));
                v.addElement(res.getString("Emp_DOB"));
                v.addElement(res.getString("Emp_Con_No"));
                v.addElement(res.getString("Emp_Email"));
                v.addElement(res.getString("Emp_Gender"));
                v.addElement(res.getString("Emp_Position"));
                v.addElement("");
                v.addElement("");
                v.addElement(res.getString("Emp_Access_Level"));
                model.addRow(v);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Emp_Btn_ShowAllEmpActionPerformed

    private void Emp_Btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Emp_Btn_BackActionPerformed
        // TODSup_Label_Headingcode here:
    }//GEN-LAST:event_Emp_Btn_BackActionPerformed

    private void Emp_Btn_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Emp_Btn_OkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Emp_Btn_OkActionPerformed

    private void Emp_Btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Emp_Btn_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Emp_Btn_SearchActionPerformed

    private void Emp_TextF_EmpNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Emp_TextF_EmpNameKeyReleased
        try {
            if (!(Emp_TextF_EmpName.getText().equals("")) || (Emp_TextF_EmpName.getText() == null)) {
                DefaultTableModel model = (DefaultTableModel) Emp_Table_Emp.getModel();
                model.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM employee WHERE Emp_FName LIKE'" + Emp_TextF_EmpName.getText() + "%'OR Emp_LName LIKE '" + Emp_TextF_EmpName.getText() + "%'");
                while (res.next()) {
                    Vector v = new Vector();
                    v.addElement(res.getString("Emp_ID"));
                    v.addElement(res.getString("Emp_FName"));
                    v.addElement(res.getString("Emp_LName"));
                    v.addElement(res.getString("Emp_Address_1"));
                    v.addElement(res.getString("Emp_Address_2"));
                    v.addElement(res.getString("Emp_DOB"));
                    v.addElement(res.getString("Emp_Con_No"));
                    v.addElement(res.getString("Emp_Email"));
                    v.addElement(res.getString("Emp_Gender"));
                    v.addElement(res.getString("Emp_Position"));
                    v.addElement("");
                    v.addElement("");
                    v.addElement(res.getString("Emp_Access_Level"));
                    model.addRow(v);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Emp_TextF_EmpNameKeyReleased

    private void Emp_TextF_EmpIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Emp_TextF_EmpIDKeyReleased
        try {
            if (!(Emp_TextF_EmpID.getText().equals("")) || (Emp_TextF_EmpID.getText() == null)) {
                DefaultTableModel model = (DefaultTableModel) Emp_Table_Emp.getModel();
                model.setRowCount(0);
                ResultSet res = ConnectDB.DBConnection().createStatement().executeQuery("SELECT* FROM employee WHERE Emp_ID LIKE'" + Emp_TextF_EmpID.getText() + "%'");
                while (res.next()) {
                    Vector v = new Vector();
                    v.addElement(res.getString("Emp_ID"));
                    v.addElement(res.getString("Emp_FName"));
                    v.addElement(res.getString("Emp_LName"));
                    v.addElement(res.getString("Emp_Address_1"));
                    v.addElement(res.getString("Emp_Address_2"));
                    v.addElement(res.getString("Emp_DOB"));
                    v.addElement(res.getString("Emp_Con_No"));
                    v.addElement(res.getString("Emp_Email"));
                    v.addElement(res.getString("Emp_Gender"));
                    v.addElement(res.getString("Emp_Position"));
                    v.addElement("");
                    v.addElement("");
                    v.addElement(res.getString("Emp_Access_Level"));
                    model.addRow(v);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Emp_TextF_EmpIDKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Emp_Btn_Back;
    private javax.swing.JButton Emp_Btn_Ok;
    private javax.swing.JButton Emp_Btn_Search;
    private javax.swing.JButton Emp_Btn_ShowAllEmp;
    private javax.swing.JLabel Emp_Label_EmpID;
    private javax.swing.JLabel Emp_Label_EmpName;
    private javax.swing.JLabel Emp_Label_Heading;
    private javax.swing.JScrollPane Emp_Scp_1;
    private javax.swing.JTable Emp_Table_Emp;
    private javax.swing.JTextField Emp_TextF_EmpID;
    private javax.swing.JTextField Emp_TextF_EmpName;
    // End of variables declaration//GEN-END:variables

}
