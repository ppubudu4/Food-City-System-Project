/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FoodCityMain;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import javax.swing.ImageIcon;


public class splash_3 extends javax.swing.JFrame {

    private splash_3.Animator paint = new splash_3.Animator();
    private String[] loadingText = {"Loading...", "Initializing...", "Loading modules...", "Loading plug-in...", "Scanning database...", "Finding data...", "Loading data...", "Loading libraries...", "Finalizing...", "Starting..."};
    //private final ImageIcon icon = new ImageIcon(getClass().getResource("/images/Splash/x.png"));
    private int t = 0, cx = 0, cy = 0;

    /**
     * Creates new form s_3
     */
    public splash_3() {
        initComponents();

        int x = (int) ((Toolkit.getDefaultToolkit().getScreenSize().getWidth() - getWidth()) / 2);
        int y = (int) ((Toolkit.getDefaultToolkit().getScreenSize().getHeight() - getHeight()) / 2);
        setLocation(x, y);

        loadPanel.setOpaque(false);
        loadPanel.setBounds(0, 0, getWidth(), getHeight());
        cx = (int) loadPanel.getBounds().getCenterX();
        cy = (int) loadPanel.getBounds().getCenterY();

        new Thread(new Runnable() {
            @Override
            public void run() {
                for (t = 0; t < 100; t++) {
                    progressBar.setValue(t);
                    setprogressLabel(t);
                    loadPanel.repaint();
                    try {
                        if (t < 20) {
                            Thread.sleep(50);
                        } else if (t < 50) {
                            Thread.sleep(90);
                        } else if (t < 75) {
                            Thread.sleep(Math.abs(t - 100));
                        } else if (t < 90) {
                            Thread.sleep(40);
                        } else {
                            Thread.sleep(30);
                        }
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
                new Login().setVisible(true);
                dispose();
            }
        }).start();

    }

    private class Animator {

        public void draw(Graphics g) {

            int v = (t <= 100) ? t : 100;
            int q = (t <= 100) ? t : 100;

            Graphics2D g2 = (Graphics2D) g;
            g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
            g2.rotate(((0.05 * Math.PI) * v), cx, cy);
            //g2.drawImage(icon.getImage(), (cx - (icon.getIconWidth() / 2)), (cy - (icon.getIconHeight() / 2)), null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadPanel = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                paint.draw(g);
            }
        };
        progressLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        mainLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(loadPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 200, 20, 20));

        progressLabel.setFont(new java.awt.Font("SansSerif", 0, 9)); // NOI18N
        progressLabel.setForeground(new java.awt.Color(255, 255, 255));
        progressLabel.setToolTipText("");
        getContentPane().add(progressLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 127, -1, -1));

        progressBar.setBackground(new java.awt.Color(255, 255, 255));
        progressBar.setForeground(new java.awt.Color(36, 156, 193));
        progressBar.setMaximum(99);
        progressBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 42, 136), 2));
        progressBar.setString("");
        progressBar.setStringPainted(true);
        getContentPane().add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 121, -1, 6));

        mainLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Splash/bckground_1.png"))); // NOI18N
        getContentPane().add(mainLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setSize(new java.awt.Dimension(481, 226));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(splash_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(splash_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(splash_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(splash_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new splash_3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel loadPanel;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel progressLabel;
    // End of variables declaration//GEN-END:variables

    private void setprogressLabel(int t) {

        int v = (t <= 100) ? t : 100;

        int i = 0;
        if (v < 10) {
            i = 0;
        } else if (v < 20) {
            i = 2;
        } else if (v < 25) {
            i = 3;
        } else if (v < 33) {
            i = 4;
        } else if (v < 45) {
            i = 4;
        } else if (v < 60) {
            i = 5;
        } else if (v < 75) {
            i = 6;
        } else if (v < 80) {
            i = 6;
        } else if (v < 88) {
            i = 7;
        } else if (v <= 100) {
            i = 9;
        }
        progressLabel.setText(loadingText[i]);

    }
}
